{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/one-paper/source/css/fonts.css","path":"css/fonts.css","modified":0,"renderable":1},{"_id":"themes/one-paper/source/css/markdown.css","path":"css/markdown.css","modified":0,"renderable":1},{"_id":"themes/one-paper/source/css/a11y-dark.min.css","path":"css/a11y-dark.min.css","modified":0,"renderable":1},{"_id":"themes/one-paper/source/css/reset.css","path":"css/reset.css","modified":0,"renderable":1},{"_id":"themes/one-paper/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-600.woff","path":"fonts/montserrat-v23-latin-600.woff","modified":0,"renderable":1},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-600italic.woff","path":"fonts/montserrat-v23-latin-600italic.woff","modified":0,"renderable":1},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-italic.woff","path":"fonts/montserrat-v23-latin-italic.woff","modified":0,"renderable":1},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-italic.woff2","path":"fonts/montserrat-v23-latin-italic.woff2","modified":0,"renderable":1},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-600italic.woff2","path":"fonts/montserrat-v23-latin-600italic.woff2","modified":0,"renderable":1},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-regular.woff","path":"fonts/montserrat-v23-latin-regular.woff","modified":0,"renderable":1},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-regular.woff2","path":"fonts/montserrat-v23-latin-regular.woff2","modified":0,"renderable":1},{"_id":"themes/one-paper/source/img/one-paper.png","path":"img/one-paper.png","modified":0,"renderable":1},{"_id":"themes/one-paper/source/js/highlight.min.js","path":"js/highlight.min.js","modified":0,"renderable":1},{"_id":"themes/one-paper/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/one-paper/source/js/highlightjs-line-numbers.js","path":"js/highlightjs-line-numbers.js","modified":0,"renderable":1},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-600.woff2","path":"fonts/montserrat-v23-latin-600.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/tags/index.md","hash":"04cddc323b9048dc5db61b20ee332df2655a99ea","modified":1703825929268},{"_id":"source/_posts/.obsidian/app.json","hash":"bf21a9e8fbc5a3846fb05b4fa0859e0917b2202f","modified":1703825826745},{"_id":"source/categories/index.md","hash":"fbc720530db00a2374857a0805f00c0a414e3542","modified":1703825888804},{"_id":"source/_posts/.obsidian/core-plugins-migration.json","hash":"688b44c61ce85d9ac421b1a310a72c1348bc9b51","modified":1703825826285},{"_id":"source/_posts/.obsidian/appearance.json","hash":"9439122150a0431e432676115220bc925af96094","modified":1703825826745},{"_id":"source/_posts/Windows/wsl异常处理.md","hash":"ff8e4cf497550be48b7c6b0c9c171f982c36251a","modified":1703827328819},{"_id":"source/_posts/云原生/Docker常见问题.md","hash":"29fc2fc31c71c76ac5322435554997aa9fe5dc2b","modified":1703827057995},{"_id":"source/_posts/.obsidian/core-plugins.json","hash":"eb138d03157a06efdb791f441be97c256aca472c","modified":1703825826283},{"_id":"source/_posts/.obsidian/workspace.json","hash":"5d3a9c2543d85bd6dd04142b369730f1b6d89880","modified":1703827336105},{"_id":"source/_posts/云原生/RocketMQ常识.md","hash":"a16aaf95033ca03899ef85143fe26a921b16345a","modified":1703827085380},{"_id":"source/_posts/Linux/Linux检查U盘是否挂载.md","hash":"8c9f757acd78bb2e3e425e54b0ff1185a6831af3","modified":1703827162321},{"_id":"source/_posts/Linux/Linux常用运维.md","hash":"e434dff14e65860fd8fd29c4aa37df79e26b731f","modified":1703827123313},{"_id":"source/_posts/Linux/systemd监控和启动应用程序.md","hash":"e482eb08db8fd8bd70838bdd2663630d8b6568c8","modified":1703827243623},{"_id":"source/_posts/Linux/Python3离线升级.md","hash":"0e689e55011337cc50dc8091f66268384a204d4a","modified":1703827221006},{"_id":"source/_posts/Linux/Tcpdump常用命令.md","hash":"adc3d26176ed3c4c45f69c529ab6e86362a57356","modified":1703827305103},{"_id":"themes/Hacker/CHANGELOG.md","hash":"5ee7ae48cc5308758894eb961caaef89ecc04048","modified":1662453582000},{"_id":"themes/Hacker/.gitignore","hash":"c57cf4e0d24c5db09716f924a45ad879650f7548","modified":1662453582000},{"_id":"themes/Hacker/CHANGELOG_zh-CN.md","hash":"5055c0a138469e673b3136c60033c5ae30a32787","modified":1662453582000},{"_id":"themes/Hacker/README.md","hash":"18d28d5466f58f275e0aec504748bbe50f4c62f5","modified":1662453582000},{"_id":"themes/Hacker/README_zh-CN.md","hash":"4fb25729cfb2e6a5727977dd9c2cdb566f839ac1","modified":1662453582000},{"_id":"themes/Hacker/_config.example.yml","hash":"eed5b26f970fcc5dd978104a6621e2664e50325a","modified":1662453582000},{"_id":"themes/Hacker/LICENSE","hash":"3127907a7623734f830e8c69ccee03b693bf993e","modified":1662453582000},{"_id":"themes/Hacker/languages/default.yml","hash":"d4466fb0a6102e50777ee56957f78de696891a0e","modified":1662453582000},{"_id":"themes/Hacker/layout/categories.ejs","hash":"bfad4e7eade650c535f0194974e2646619657b8b","modified":1662453582000},{"_id":"themes/Hacker/languages/zh-CN.yml","hash":"d822b531c8e0edd5e1ae85ac3de96017e4781b3f","modified":1662453582000},{"_id":"themes/Hacker/layout/page.ejs","hash":"84e00bbcc643dff4bd02880b3bbea658f510835f","modified":1662453582000},{"_id":"themes/Hacker/layout/post.ejs","hash":"84e00bbcc643dff4bd02880b3bbea658f510835f","modified":1662453582000},{"_id":"themes/Hacker/layout/index.ejs","hash":"1d2c487a95d25e763b5f7e004194eb6ee6b18135","modified":1662453582000},{"_id":"themes/Hacker/layout/layout.ejs","hash":"1bd1ff49fb17548b934e0664ba6cefd60b086fa9","modified":1662453582000},{"_id":"themes/Hacker/layout/archive.ejs","hash":"2238cbe29009aafb16969d2c70dceb3f71772123","modified":1662453582000},{"_id":"themes/Hacker/source/css/style.styl","hash":"208e5f6d010e4e2c5590dae5e4fca8de592d3ef1","modified":1662453582000},{"_id":"themes/Hacker/layout/components/baiduanalytics.ejs","hash":"75ea315908beaf390265e00167cf8a30b5d0d94a","modified":1662453582000},{"_id":"themes/Hacker/layout/tags.ejs","hash":"ee89e6a9c14bdb5e5e8cf975a558c780fe8dabff","modified":1662453582000},{"_id":"themes/Hacker/layout/components/footer.ejs","hash":"538795f4af3a98e824aefc4b68a1bcd210c091e9","modified":1662453582000},{"_id":"themes/Hacker/layout/components/categories.ejs","hash":"3665bf5d1c7181db22dc1c48d62ebf42757d8c27","modified":1662453582000},{"_id":"themes/Hacker/layout/components/googleanalytics.ejs","hash":"27e6906523eae89fed4a6e86ebb2ad614a25c647","modified":1662453582000},{"_id":"themes/Hacker/layout/components/article.ejs","hash":"06dd5da86efddecedd26a998fa66c53c580867f0","modified":1662453582000},{"_id":"themes/Hacker/layout/components/header.ejs","hash":"929a8eafa278d49c2f41d3581e2608eca80d7856","modified":1662453582000},{"_id":"themes/Hacker/layout/components/pagination.ejs","hash":"4ab5e3b0239e467923a0f91c771bcc9ee7889cfe","modified":1662453582000},{"_id":"themes/Hacker/layout/components/head.ejs","hash":"10475fdfc513c9380f18d034e15b3b051c8e9269","modified":1662453582000},{"_id":"themes/Hacker/layout/components/comment.ejs","hash":"d1fffabbca58cbeb0ff33855fd1b7ea6079e82b3","modified":1662453582000},{"_id":"themes/Hacker/source/images/icon-heart.svg","hash":"ec483e96c88eea013fd8ac71a34a875107397f43","modified":1662453582000},{"_id":"themes/Hacker/source/css/base/normalize.css","hash":"e58275a588bb631a37a2988145eea231ed23176b","modified":1662453582000},{"_id":"themes/Hacker/layout/components/archive.ejs","hash":"1f79ebaf52b8229cf5c58bb8325cf0177859a05c","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/article.styl","hash":"f613fc6ed4dec8171bf7a03bd8878eaa995082bb","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/archive.styl","hash":"3ebb7790a46587297966f200fb4fcdbba25269df","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/footer.styl","hash":"80ef890252d31d3bbfe71740fdcfc54ae14cad8e","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/header.styl","hash":"fa5e6d715d288a327406df78225284c70530cb98","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/categories.styl","hash":"c67e20d60351295cb178b568af42d430f4bcc3e6","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/responsive.styl","hash":"053e7ec4c22845422440660b7e1d6b0dea5b4fbd","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/pagination.styl","hash":"1cec6cb1835f99432cc5c6ba674782237fea4f95","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/layout.styl","hash":"9c6e6bc00f377666f6815bc5e23438893357f8f6","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/tags.styl","hash":"684cf4eb4b8671476365e955dceebf096cc0e6ed","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/icon.styl","hash":"8da3ff5b6cd1609fdfe0c564d47391367abc8808","modified":1662453582000},{"_id":"themes/Hacker/source/css/components/syntax.styl","hash":"8c0d919322194dc295e5404bcd68949f962f88dc","modified":1662453582000},{"_id":"themes/one-paper/_config.yml","hash":"13a88d6e9d9ad7c8363b852cfc681e458c119116","modified":1669997578000},{"_id":"themes/one-paper/README.md","hash":"93bbe579f36ddf43190c5491dd30a11d45def810","modified":1669997578000},{"_id":"themes/one-paper/LICENSE","hash":"aad1dcb7deccd18a89508fa2ad78101dafa10cc9","modified":1669997578000},{"_id":"themes/one-paper/layout/archive.ejs","hash":"ff0d592a498756894f9ca969f1f2f57135c58adc","modified":1669997578000},{"_id":"themes/one-paper/layout/post.ejs","hash":"8b2ba9c9d986e29a175090b365a3e89f74a52112","modified":1669997578000},{"_id":"themes/one-paper/layout/_partial/header.ejs","hash":"2b54259f35942eeb1b99482c2a4517152fc87f0c","modified":1669997578000},{"_id":"themes/one-paper/layout/layout.ejs","hash":"68d1bb31fccbe9810b9c8a6cd54b53938e0318a2","modified":1669997578000},{"_id":"themes/one-paper/layout/index.ejs","hash":"c9f87f50f9e97761aa2334fe47e427b97d811836","modified":1669997578000},{"_id":"themes/one-paper/layout/_partial/head.ejs","hash":"5e089c0f24607334d34215948f9bfba2569c5eea","modified":1669997578000},{"_id":"themes/one-paper/layout/_partial/paginator.ejs","hash":"980bf0a0be798c19df4b0827aa4b90b35c872425","modified":1669997578000},{"_id":"themes/one-paper/layout/_partial/post-header.ejs","hash":"f6fa471122459b25a9948405d72cb5f197d2fc25","modified":1669997578000},{"_id":"themes/one-paper/layout/_partial/footer.ejs","hash":"e9589c08e9705adf01febab79f6432bf7a89aae5","modified":1703826814066},{"_id":"themes/one-paper/source/css/fonts.css","hash":"bd6171c8de8d9f4efafca3802c4d20099d7fca1c","modified":1669997578000},{"_id":"themes/one-paper/source/css/a11y-dark.min.css","hash":"e0a3294faa7dfa1eae300caea5a01f438b643b93","modified":1669997578000},{"_id":"themes/one-paper/source/css/markdown.css","hash":"8116b5049847ca524b99e10a501b945dcff0f29d","modified":1669997578000},{"_id":"themes/one-paper/source/css/reset.css","hash":"f6184d3f74dc704f077ca4e0b91003652a9db978","modified":1669997578000},{"_id":"themes/one-paper/source/css/style.css","hash":"1fc1cf8671c8f2a50aea2e168a712401d02b4902","modified":1669997578000},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-600.woff","hash":"925d9f095488dc77dd84e8414422f0113f4628a9","modified":1669997578000},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-italic.woff","hash":"fca5ee87a17c57eb53265da1c2c75db7305ad69c","modified":1669997578000},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-italic.woff2","hash":"ce1eae3f714702a82c1e9c05b5ba302a9e91ac20","modified":1669997578000},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-600italic.woff2","hash":"1f24e9edcccd42d4694a4020d6a8f9b9cb28f471","modified":1669997578000},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-regular.woff","hash":"285adda1da1fc15583ad53160d66032aeccb45ea","modified":1669997578000},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-regular.woff2","hash":"f7eefafb7bfdc6b5572714fa267268b845a67cf4","modified":1669997578000},{"_id":"themes/one-paper/source/img/favicon.png","hash":"0845678601e8b144ae45c448a25650f4d3d2182d","modified":1669997578000},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-600.woff2","hash":"2fe30978041c41a2994ac0fd491e83d32a3203b7","modified":1669997578000},{"_id":"themes/one-paper/source/img/one-paper.png","hash":"20beb40bdfb2e5222d859e776c1d2ba1eb556d85","modified":1669997578000},{"_id":"themes/one-paper/source/js/highlightjs-line-numbers.js","hash":"690e96133591495fa847d828573bd0576b2d168a","modified":1669997578000},{"_id":"themes/one-paper/source/js/highlight.min.js","hash":"d264ad16bdf39cfec2b06c20223b87fcb37ad27b","modified":1669997578000},{"_id":"themes/one-paper/source/fonts/montserrat-v23-latin-600italic.woff","hash":"c0e80c18fac1cd10469c4f922ad92e81fc8b3b94","modified":1669997578000},{"_id":"source/about/index.md","hash":"f45ee1401c50e69b14faa90aec53abaf16f04299","modified":1703827407445}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2023-12-29T04:58:21.000Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-12-29 12:58:21\nlayout: \"tags\"\n---\n","updated":"2023-12-29T04:58:49.268Z","path":"tags/index.html","comments":1,"_id":"clqq60vsi0000yoqa3zlw235g","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2023-12-29T04:57:45.000Z","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-12-29 12:57:45\nlayout: \"categories\"\n---\n","updated":"2023-12-29T04:58:08.804Z","path":"categories/index.html","comments":1,"_id":"clqq60vsm0002yoqa5z2uex9h","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2023-12-29T05:23:27.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-12-29 13:23:27\n---\n","updated":"2023-12-29T05:23:27.445Z","path":"about/index.html","comments":1,"layout":"page","_id":"clqq6ukwv0000a0qa4d7g9gfv","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"WSL异常处理","date":"2023-12-29T05:15:56.000Z","_content":"\n#### WSL2 占位程序接收到错误数据\nError code: Wsl/Service/0x800706f7\n```bash\nnetsh winsock reset\n```  \n然后就可以正常启动 WSL2 了，不用重启电脑\n\n","source":"_posts/Windows/wsl异常处理.md","raw":"---\ntitle: WSL异常处理\ntags:\n  - 技术笔记\ndate: 2023-12-29 13:15:56\n---\n\n#### WSL2 占位程序接收到错误数据\nError code: Wsl/Service/0x800706f7\n```bash\nnetsh winsock reset\n```  \n然后就可以正常启动 WSL2 了，不用重启电脑\n\n","slug":"Windows/wsl异常处理","published":1,"updated":"2023-12-29T05:22:08.819Z","_id":"clqq60vsk0001yoqagryocwdu","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"WSL2-占位程序接收到错误数据\"><a href=\"#WSL2-占位程序接收到错误数据\" class=\"headerlink\" title=\"WSL2 占位程序接收到错误数据\"></a>WSL2 占位程序接收到错误数据</h4><p>Error code: Wsl&#x2F;Service&#x2F;0x800706f7</p>\n<pre><code class=\"bash\">netsh winsock reset\n</code></pre>\n<p>然后就可以正常启动 WSL2 了，不用重启电脑</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"WSL2-占位程序接收到错误数据\"><a href=\"#WSL2-占位程序接收到错误数据\" class=\"headerlink\" title=\"WSL2 占位程序接收到错误数据\"></a>WSL2 占位程序接收到错误数据</h4><p>Error code: Wsl&#x2F;Service&#x2F;0x800706f7</p>\n<pre><code class=\"bash\">netsh winsock reset\n</code></pre>\n<p>然后就可以正常启动 WSL2 了，不用重启电脑</p>\n"},{"title":"Docker常见问题","date":"2023-12-29T05:15:56.000Z","_content":"#### 设置docker日志大小\n```bash\n# vim /etc/docker/daemon.json\n{\n  \"registry-mirrors\": [\"http://f613ce8f.m.daocloud.io\"],\n  \"log-driver\":\"json-file\",\n  \"log-opts\": {\"max-size\":\"500m\", \"max-file\":\"3\"}\n}\n```\n\n#### 清理日志\n```bash\n#!/bin/bash\n\nlogs=$(find /var/lib/docker/containers/ -name *-json.log)  \nfor log in $logs  \ndo  \n  echo \"clean logs : $log\"  \n  cat /dev/null > $log  \ndone  \n```\n\n#### 清理镜像\n```bash\ndocker rmi $(docker images -q -f dangling=true)\n```\n","source":"_posts/云原生/Docker常见问题.md","raw":"---\ntitle: Docker常见问题\ndate: 2023-12-29 13:15:56\ntags:\n  - 技术笔记\n---\n#### 设置docker日志大小\n```bash\n# vim /etc/docker/daemon.json\n{\n  \"registry-mirrors\": [\"http://f613ce8f.m.daocloud.io\"],\n  \"log-driver\":\"json-file\",\n  \"log-opts\": {\"max-size\":\"500m\", \"max-file\":\"3\"}\n}\n```\n\n#### 清理日志\n```bash\n#!/bin/bash\n\nlogs=$(find /var/lib/docker/containers/ -name *-json.log)  \nfor log in $logs  \ndo  \n  echo \"clean logs : $log\"  \n  cat /dev/null > $log  \ndone  \n```\n\n#### 清理镜像\n```bash\ndocker rmi $(docker images -q -f dangling=true)\n```\n","slug":"云原生/Docker常见问题","published":1,"updated":"2023-12-29T05:17:37.995Z","_id":"clqq60vsn0003yoqa6x6m76on","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"设置docker日志大小\"><a href=\"#设置docker日志大小\" class=\"headerlink\" title=\"设置docker日志大小\"></a>设置docker日志大小</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vim /etc/docker/daemon.json</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;http://f613ce8f.m.daocloud.io&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;log-driver&quot;</span>:<span class=\"string\">&quot;json-file&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;log-opts&quot;</span>: &#123;<span class=\"string\">&quot;max-size&quot;</span>:<span class=\"string\">&quot;500m&quot;</span>, <span class=\"string\">&quot;max-file&quot;</span>:<span class=\"string\">&quot;3&quot;</span>&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"清理日志\"><a href=\"#清理日志\" class=\"headerlink\" title=\"清理日志\"></a>清理日志</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">logs=$(find /var/lib/docker/containers/ -name *-json.log)  </span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">log</span> <span class=\"keyword\">in</span> <span class=\"variable\">$logs</span>  </span><br><span class=\"line\"><span class=\"keyword\">do</span>  </span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;clean logs : <span class=\"variable\">$log</span>&quot;</span>  </span><br><span class=\"line\">  <span class=\"built_in\">cat</span> /dev/null &gt; <span class=\"variable\">$log</span>  </span><br><span class=\"line\"><span class=\"keyword\">done</span>  </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"清理镜像\"><a href=\"#清理镜像\" class=\"headerlink\" title=\"清理镜像\"></a>清理镜像</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi $(docker images -q -f dangling=<span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"设置docker日志大小\"><a href=\"#设置docker日志大小\" class=\"headerlink\" title=\"设置docker日志大小\"></a>设置docker日志大小</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vim /etc/docker/daemon.json</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;http://f613ce8f.m.daocloud.io&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;log-driver&quot;</span>:<span class=\"string\">&quot;json-file&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;log-opts&quot;</span>: &#123;<span class=\"string\">&quot;max-size&quot;</span>:<span class=\"string\">&quot;500m&quot;</span>, <span class=\"string\">&quot;max-file&quot;</span>:<span class=\"string\">&quot;3&quot;</span>&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"清理日志\"><a href=\"#清理日志\" class=\"headerlink\" title=\"清理日志\"></a>清理日志</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">logs=$(find /var/lib/docker/containers/ -name *-json.log)  </span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">log</span> <span class=\"keyword\">in</span> <span class=\"variable\">$logs</span>  </span><br><span class=\"line\"><span class=\"keyword\">do</span>  </span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;clean logs : <span class=\"variable\">$log</span>&quot;</span>  </span><br><span class=\"line\">  <span class=\"built_in\">cat</span> /dev/null &gt; <span class=\"variable\">$log</span>  </span><br><span class=\"line\"><span class=\"keyword\">done</span>  </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"清理镜像\"><a href=\"#清理镜像\" class=\"headerlink\" title=\"清理镜像\"></a>清理镜像</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi $(docker images -q -f dangling=<span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"RocketMQ消息队列","date":"2023-12-29T05:15:56.000Z","_content":"\n#### 系统配置建议\n1. 中间件系统肯定要开启大量的线程（跟vm.max_map_count有关）\n2. 而且要进行大量的网络通信和磁盘IO（跟ulimit有关）\n3. 然后大量的使用内存（跟vm.swappiness和vm.overcommit_memory有关）\n\n#### JVM参数\n```\n就是默认的堆大小是8g内存，新生代是4g内存.\n-Xms8g -Xmx8g -Xmn4g\n\n选用了G1垃圾回收器来做分代回收，对新生代和老年代都是用G1来回收\n-XX:+UseG1GC -XX:G1HeapRegionSize=16m\n\n在G1管理的老年代里预留25%的空闲内存. 默认值是10%\n-XX:G1ReservePercent=25\n\n堆内存的使用率达到30%之后就会自动启动G1的并发垃圾回收。默认值是45%，这里调低了一些，也就是提高了GC的频率，\n但是避免了垃圾对象过多，一次垃圾回收耗时过长的问题\n-XX:InitiatingHeapOccupancyPercent=30\n\nJVM会抛弃一些异常堆栈信息\n-XX:-OmitStackTraceInFastThrow\n\n是强制让JVM启动的时候直接分配我们指定的内存，不要等到使用内存的时候再分配\n-XX:+AlwaysPreTouch\n\nRocketMQ里大量用了NIO中的direct buffer，这里限定了direct buffer最多申请多少\n-XX:MaxDirectMemorySize=15g\n\n是禁用大内存页和偏向锁\nXX:-UseLargePages -XX:-UseBiasedLocking：\n```\n\n\n#### 压力测试过程\n1. 压测目的\n应该在TPS和机器的cpu负载、内存使用率、jvm gc频率、磁盘io负载、网络流量负载之间取得一个平衡，尽量让TPS尽可能的提高，同时让机器的各项资源负载不要太高。\n\n2. 压测过程：\n采用几台机器开启大量线程并发读写消息。然后观察TPS、cpu load (top)、内存使用率(free), jvm gc频率（jstat), 磁盘io负载（top-wa字段）、网卡流量负载（使用sar命令），不断增加机器和线程，让TPS不断提升上去，同时观察各项资源负载是否过高。\n\n#### RocketMQ发送消息\n1. 同步发送消息\n2. 异步发送消息\n3. 单向发送消息\n#### RocketMQ消费模式\n1. PUSH消费模式\n2. PULL消费模式\n\n#### Topic、MessageQueue、Broker\n\n```bash\n$HOME/store/consumequeue/{topic}/{queueId}/{fileName}\n```","source":"_posts/云原生/RocketMQ常识.md","raw":"---\ntitle: RocketMQ消息队列\ndate: 2023-12-29 13:15:56\ntags:\n  - 技术笔记\n---\n\n#### 系统配置建议\n1. 中间件系统肯定要开启大量的线程（跟vm.max_map_count有关）\n2. 而且要进行大量的网络通信和磁盘IO（跟ulimit有关）\n3. 然后大量的使用内存（跟vm.swappiness和vm.overcommit_memory有关）\n\n#### JVM参数\n```\n就是默认的堆大小是8g内存，新生代是4g内存.\n-Xms8g -Xmx8g -Xmn4g\n\n选用了G1垃圾回收器来做分代回收，对新生代和老年代都是用G1来回收\n-XX:+UseG1GC -XX:G1HeapRegionSize=16m\n\n在G1管理的老年代里预留25%的空闲内存. 默认值是10%\n-XX:G1ReservePercent=25\n\n堆内存的使用率达到30%之后就会自动启动G1的并发垃圾回收。默认值是45%，这里调低了一些，也就是提高了GC的频率，\n但是避免了垃圾对象过多，一次垃圾回收耗时过长的问题\n-XX:InitiatingHeapOccupancyPercent=30\n\nJVM会抛弃一些异常堆栈信息\n-XX:-OmitStackTraceInFastThrow\n\n是强制让JVM启动的时候直接分配我们指定的内存，不要等到使用内存的时候再分配\n-XX:+AlwaysPreTouch\n\nRocketMQ里大量用了NIO中的direct buffer，这里限定了direct buffer最多申请多少\n-XX:MaxDirectMemorySize=15g\n\n是禁用大内存页和偏向锁\nXX:-UseLargePages -XX:-UseBiasedLocking：\n```\n\n\n#### 压力测试过程\n1. 压测目的\n应该在TPS和机器的cpu负载、内存使用率、jvm gc频率、磁盘io负载、网络流量负载之间取得一个平衡，尽量让TPS尽可能的提高，同时让机器的各项资源负载不要太高。\n\n2. 压测过程：\n采用几台机器开启大量线程并发读写消息。然后观察TPS、cpu load (top)、内存使用率(free), jvm gc频率（jstat), 磁盘io负载（top-wa字段）、网卡流量负载（使用sar命令），不断增加机器和线程，让TPS不断提升上去，同时观察各项资源负载是否过高。\n\n#### RocketMQ发送消息\n1. 同步发送消息\n2. 异步发送消息\n3. 单向发送消息\n#### RocketMQ消费模式\n1. PUSH消费模式\n2. PULL消费模式\n\n#### Topic、MessageQueue、Broker\n\n```bash\n$HOME/store/consumequeue/{topic}/{queueId}/{fileName}\n```","slug":"云原生/RocketMQ常识","published":1,"updated":"2023-12-29T05:18:05.380Z","_id":"clqq60vso0004yoqag7wy1951","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"系统配置建议\"><a href=\"#系统配置建议\" class=\"headerlink\" title=\"系统配置建议\"></a>系统配置建议</h4><ol>\n<li>中间件系统肯定要开启大量的线程（跟vm.max_map_count有关）</li>\n<li>而且要进行大量的网络通信和磁盘IO（跟ulimit有关）</li>\n<li>然后大量的使用内存（跟vm.swappiness和vm.overcommit_memory有关）</li>\n</ol>\n<h4 id=\"JVM参数\"><a href=\"#JVM参数\" class=\"headerlink\" title=\"JVM参数\"></a>JVM参数</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">就是默认的堆大小是8g内存，新生代是4g内存.</span><br><span class=\"line\">-Xms8g -Xmx8g -Xmn4g</span><br><span class=\"line\"></span><br><span class=\"line\">选用了G1垃圾回收器来做分代回收，对新生代和老年代都是用G1来回收</span><br><span class=\"line\">-XX:+UseG1GC -XX:G1HeapRegionSize=16m</span><br><span class=\"line\"></span><br><span class=\"line\">在G1管理的老年代里预留25%的空闲内存. 默认值是10%</span><br><span class=\"line\">-XX:G1ReservePercent=25</span><br><span class=\"line\"></span><br><span class=\"line\">堆内存的使用率达到30%之后就会自动启动G1的并发垃圾回收。默认值是45%，这里调低了一些，也就是提高了GC的频率，</span><br><span class=\"line\">但是避免了垃圾对象过多，一次垃圾回收耗时过长的问题</span><br><span class=\"line\">-XX:InitiatingHeapOccupancyPercent=30</span><br><span class=\"line\"></span><br><span class=\"line\">JVM会抛弃一些异常堆栈信息</span><br><span class=\"line\">-XX:-OmitStackTraceInFastThrow</span><br><span class=\"line\"></span><br><span class=\"line\">是强制让JVM启动的时候直接分配我们指定的内存，不要等到使用内存的时候再分配</span><br><span class=\"line\">-XX:+AlwaysPreTouch</span><br><span class=\"line\"></span><br><span class=\"line\">RocketMQ里大量用了NIO中的direct buffer，这里限定了direct buffer最多申请多少</span><br><span class=\"line\">-XX:MaxDirectMemorySize=15g</span><br><span class=\"line\"></span><br><span class=\"line\">是禁用大内存页和偏向锁</span><br><span class=\"line\">XX:-UseLargePages -XX:-UseBiasedLocking：</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"压力测试过程\"><a href=\"#压力测试过程\" class=\"headerlink\" title=\"压力测试过程\"></a>压力测试过程</h4><ol>\n<li><p>压测目的<br>应该在TPS和机器的cpu负载、内存使用率、jvm gc频率、磁盘io负载、网络流量负载之间取得一个平衡，尽量让TPS尽可能的提高，同时让机器的各项资源负载不要太高。</p>\n</li>\n<li><p>压测过程：<br>采用几台机器开启大量线程并发读写消息。然后观察TPS、cpu load (top)、内存使用率(free), jvm gc频率（jstat), 磁盘io负载（top-wa字段）、网卡流量负载（使用sar命令），不断增加机器和线程，让TPS不断提升上去，同时观察各项资源负载是否过高。</p>\n</li>\n</ol>\n<h4 id=\"RocketMQ发送消息\"><a href=\"#RocketMQ发送消息\" class=\"headerlink\" title=\"RocketMQ发送消息\"></a>RocketMQ发送消息</h4><ol>\n<li>同步发送消息</li>\n<li>异步发送消息</li>\n<li>单向发送消息</li>\n</ol>\n<h4 id=\"RocketMQ消费模式\"><a href=\"#RocketMQ消费模式\" class=\"headerlink\" title=\"RocketMQ消费模式\"></a>RocketMQ消费模式</h4><ol>\n<li>PUSH消费模式</li>\n<li>PULL消费模式</li>\n</ol>\n<h4 id=\"Topic、MessageQueue、Broker\"><a href=\"#Topic、MessageQueue、Broker\" class=\"headerlink\" title=\"Topic、MessageQueue、Broker\"></a>Topic、MessageQueue、Broker</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$HOME</span>/store/consumequeue/&#123;topic&#125;/&#123;queueId&#125;/&#123;fileName&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"系统配置建议\"><a href=\"#系统配置建议\" class=\"headerlink\" title=\"系统配置建议\"></a>系统配置建议</h4><ol>\n<li>中间件系统肯定要开启大量的线程（跟vm.max_map_count有关）</li>\n<li>而且要进行大量的网络通信和磁盘IO（跟ulimit有关）</li>\n<li>然后大量的使用内存（跟vm.swappiness和vm.overcommit_memory有关）</li>\n</ol>\n<h4 id=\"JVM参数\"><a href=\"#JVM参数\" class=\"headerlink\" title=\"JVM参数\"></a>JVM参数</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">就是默认的堆大小是8g内存，新生代是4g内存.</span><br><span class=\"line\">-Xms8g -Xmx8g -Xmn4g</span><br><span class=\"line\"></span><br><span class=\"line\">选用了G1垃圾回收器来做分代回收，对新生代和老年代都是用G1来回收</span><br><span class=\"line\">-XX:+UseG1GC -XX:G1HeapRegionSize=16m</span><br><span class=\"line\"></span><br><span class=\"line\">在G1管理的老年代里预留25%的空闲内存. 默认值是10%</span><br><span class=\"line\">-XX:G1ReservePercent=25</span><br><span class=\"line\"></span><br><span class=\"line\">堆内存的使用率达到30%之后就会自动启动G1的并发垃圾回收。默认值是45%，这里调低了一些，也就是提高了GC的频率，</span><br><span class=\"line\">但是避免了垃圾对象过多，一次垃圾回收耗时过长的问题</span><br><span class=\"line\">-XX:InitiatingHeapOccupancyPercent=30</span><br><span class=\"line\"></span><br><span class=\"line\">JVM会抛弃一些异常堆栈信息</span><br><span class=\"line\">-XX:-OmitStackTraceInFastThrow</span><br><span class=\"line\"></span><br><span class=\"line\">是强制让JVM启动的时候直接分配我们指定的内存，不要等到使用内存的时候再分配</span><br><span class=\"line\">-XX:+AlwaysPreTouch</span><br><span class=\"line\"></span><br><span class=\"line\">RocketMQ里大量用了NIO中的direct buffer，这里限定了direct buffer最多申请多少</span><br><span class=\"line\">-XX:MaxDirectMemorySize=15g</span><br><span class=\"line\"></span><br><span class=\"line\">是禁用大内存页和偏向锁</span><br><span class=\"line\">XX:-UseLargePages -XX:-UseBiasedLocking：</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"压力测试过程\"><a href=\"#压力测试过程\" class=\"headerlink\" title=\"压力测试过程\"></a>压力测试过程</h4><ol>\n<li><p>压测目的<br>应该在TPS和机器的cpu负载、内存使用率、jvm gc频率、磁盘io负载、网络流量负载之间取得一个平衡，尽量让TPS尽可能的提高，同时让机器的各项资源负载不要太高。</p>\n</li>\n<li><p>压测过程：<br>采用几台机器开启大量线程并发读写消息。然后观察TPS、cpu load (top)、内存使用率(free), jvm gc频率（jstat), 磁盘io负载（top-wa字段）、网卡流量负载（使用sar命令），不断增加机器和线程，让TPS不断提升上去，同时观察各项资源负载是否过高。</p>\n</li>\n</ol>\n<h4 id=\"RocketMQ发送消息\"><a href=\"#RocketMQ发送消息\" class=\"headerlink\" title=\"RocketMQ发送消息\"></a>RocketMQ发送消息</h4><ol>\n<li>同步发送消息</li>\n<li>异步发送消息</li>\n<li>单向发送消息</li>\n</ol>\n<h4 id=\"RocketMQ消费模式\"><a href=\"#RocketMQ消费模式\" class=\"headerlink\" title=\"RocketMQ消费模式\"></a>RocketMQ消费模式</h4><ol>\n<li>PUSH消费模式</li>\n<li>PULL消费模式</li>\n</ol>\n<h4 id=\"Topic、MessageQueue、Broker\"><a href=\"#Topic、MessageQueue、Broker\" class=\"headerlink\" title=\"Topic、MessageQueue、Broker\"></a>Topic、MessageQueue、Broker</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$HOME</span>/store/consumequeue/&#123;topic&#125;/&#123;queueId&#125;/&#123;fileName&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Linux检查U盘是否挂载","date":"2023-12-29T05:15:56.000Z","_content":"If you need to check the full list of mount points, use getmntent(3) or its thread-safe GNU extension getmntent_r(3).\n\nIf you just want to quickly check whether a given directory has a filesystem mounted on it or not, then use one of the functions in the stat(2) family. For example, if you want to check if /mnt has a filesystem mounted or not, you could do something like this。\n\n```c\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nstruct stat mountpoint;\nstruct stat parent;\n\n/* Get the stat structure of the directory...*/\nif stat(\"/mnt\", &mountpoint) == -1) {\n    perror(\"failed to stat mountpoint:\");\n    exit(EXIT_FAILURE);\n}\n\n/* ... and its parent. */\nif stat(\"/mnt/..\", &parent) == -1) {\n    perror(\"failed to stat parent:\");\n    exit(EXIT_FAILURE);\n}\n\n/* Compare the st_dev fields in the results: if they are\n   equal, then both the directory and its parent belong \n   to the same filesystem, and so the directory is not \n   currently a mount point.\n*/\nif (mountpoint.st_dev == parent.st_dev) {\n    printf(\"No, there is nothing mounted in that directory.\\n\");\n} else {\n    printf(\"Yes, there is currently a filesystem mounted.\\n\");\n}\n```\n\n\n原文参见: [detect-if-usb-disk-is-mounted-in-c-application-in-linux](https://unix.stackexchange.com/questions/497351/detect-if-usb-disk-is-mounted-in-c-application-in-linux)\n","source":"_posts/Linux/Linux检查U盘是否挂载.md","raw":"---\ntitle: Linux检查U盘是否挂载\ndate: 2023-12-29 13:15:56\ntags:\n  - 技术笔记\n  - Linux\n---\nIf you need to check the full list of mount points, use getmntent(3) or its thread-safe GNU extension getmntent_r(3).\n\nIf you just want to quickly check whether a given directory has a filesystem mounted on it or not, then use one of the functions in the stat(2) family. For example, if you want to check if /mnt has a filesystem mounted or not, you could do something like this。\n\n```c\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nstruct stat mountpoint;\nstruct stat parent;\n\n/* Get the stat structure of the directory...*/\nif stat(\"/mnt\", &mountpoint) == -1) {\n    perror(\"failed to stat mountpoint:\");\n    exit(EXIT_FAILURE);\n}\n\n/* ... and its parent. */\nif stat(\"/mnt/..\", &parent) == -1) {\n    perror(\"failed to stat parent:\");\n    exit(EXIT_FAILURE);\n}\n\n/* Compare the st_dev fields in the results: if they are\n   equal, then both the directory and its parent belong \n   to the same filesystem, and so the directory is not \n   currently a mount point.\n*/\nif (mountpoint.st_dev == parent.st_dev) {\n    printf(\"No, there is nothing mounted in that directory.\\n\");\n} else {\n    printf(\"Yes, there is currently a filesystem mounted.\\n\");\n}\n```\n\n\n原文参见: [detect-if-usb-disk-is-mounted-in-c-application-in-linux](https://unix.stackexchange.com/questions/497351/detect-if-usb-disk-is-mounted-in-c-application-in-linux)\n","slug":"Linux/Linux检查U盘是否挂载","published":1,"updated":"2023-12-29T05:19:22.321Z","_id":"clqq60vso0005yoqafs37dn3u","comments":1,"layout":"post","photos":[],"link":"","content":"<p>If you need to check the full list of mount points, use getmntent(3) or its thread-safe GNU extension getmntent_r(3).</p>\n<p>If you just want to quickly check whether a given directory has a filesystem mounted on it or not, then use one of the functions in the stat(2) family. For example, if you want to check if &#x2F;mnt has a filesystem mounted or not, you could do something like this。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/types.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/stat.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stat</span> <span class=\"title\">mountpoint</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stat</span> <span class=\"title\">parent</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Get the stat structure of the directory...*/</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"title function_\">stat</span><span class=\"params\">(<span class=\"string\">&quot;/mnt&quot;</span>, &amp;mountpoint)</span> == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    perror(<span class=\"string\">&quot;failed to stat mountpoint:&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ... and its parent. */</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"title function_\">stat</span><span class=\"params\">(<span class=\"string\">&quot;/mnt/..&quot;</span>, &amp;parent)</span> == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    perror(<span class=\"string\">&quot;failed to stat parent:&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Compare the st_dev fields in the results: if they are</span></span><br><span class=\"line\"><span class=\"comment\">   equal, then both the directory and its parent belong </span></span><br><span class=\"line\"><span class=\"comment\">   to the same filesystem, and so the directory is not </span></span><br><span class=\"line\"><span class=\"comment\">   currently a mount point.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (mountpoint.st_dev == parent.st_dev) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;No, there is nothing mounted in that directory.\\n&quot;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Yes, there is currently a filesystem mounted.\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>原文参见: <a href=\"https://unix.stackexchange.com/questions/497351/detect-if-usb-disk-is-mounted-in-c-application-in-linux\">detect-if-usb-disk-is-mounted-in-c-application-in-linux</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>If you need to check the full list of mount points, use getmntent(3) or its thread-safe GNU extension getmntent_r(3).</p>\n<p>If you just want to quickly check whether a given directory has a filesystem mounted on it or not, then use one of the functions in the stat(2) family. For example, if you want to check if &#x2F;mnt has a filesystem mounted or not, you could do something like this。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/types.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/stat.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stat</span> <span class=\"title\">mountpoint</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stat</span> <span class=\"title\">parent</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Get the stat structure of the directory...*/</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"title function_\">stat</span><span class=\"params\">(<span class=\"string\">&quot;/mnt&quot;</span>, &amp;mountpoint)</span> == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    perror(<span class=\"string\">&quot;failed to stat mountpoint:&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ... and its parent. */</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"title function_\">stat</span><span class=\"params\">(<span class=\"string\">&quot;/mnt/..&quot;</span>, &amp;parent)</span> == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    perror(<span class=\"string\">&quot;failed to stat parent:&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(EXIT_FAILURE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Compare the st_dev fields in the results: if they are</span></span><br><span class=\"line\"><span class=\"comment\">   equal, then both the directory and its parent belong </span></span><br><span class=\"line\"><span class=\"comment\">   to the same filesystem, and so the directory is not </span></span><br><span class=\"line\"><span class=\"comment\">   currently a mount point.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (mountpoint.st_dev == parent.st_dev) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;No, there is nothing mounted in that directory.\\n&quot;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Yes, there is currently a filesystem mounted.\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>原文参见: <a href=\"https://unix.stackexchange.com/questions/497351/detect-if-usb-disk-is-mounted-in-c-application-in-linux\">detect-if-usb-disk-is-mounted-in-c-application-in-linux</a></p>\n"},{"title":"Linux常用运维","date":"2023-12-29T05:15:56.000Z","_content":"\n### 磁盘管理\n\n#### 磁盘分区\n\n通用分区使用fdisk，如果需要分配超过1T的分区，使用parted。 \n##### fidsk分区\n```bash\n# 操作磁盘\n$ fdisk /dev/sdc\nWelcome to fdisk (util-linux 2.30.1).\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\n\n# 新建分区\nCommand (m for help): n\nPartition type\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended (container for logical partitions)\n\n# 分区类型：p 主分区；e 扩展分区\nSelect (default p): Enter\nUsing default response p.\nPartition number (1-4, default 1): Enter\nFirst sector (2048-20971519, default 2048): Enter\n\n# 分区大小\nLast sector, +sectors or +size{K,M,G,T,P} (2048-20971519, default 20971519): +1G\nCreated a new partition 1 of type 'Linux' and of size 1 GiB.\n\nCommand (m for help): p\nDisk /dev/sdc: 10 GiB, 10737418240 bytes, 20971520 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x8cc8f9e5\nDevice     Boot Start     End Sectors Size Id Type\n/dev/sdc1        2048 2099199 2097152   1G 83 Linux\n\n# 保存分区表\nCommand (m for help): w\nThe partition table has been altered.\nCalling ioctl() to re-read partition table.\nSyncing disks.\n```\n\n##### parted分区\n超过1T的大空间分区，操作如下\n```\n$ parted /dev/sdb\n# 对/dev/sdb进行分区或管理操作\n \nGNU Parted 3.1\n使用 /dev/sdb\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n \n(parted) mklabel gpt\n# 定义分区表格式（常用的有msdos和gpt分区表格式，msdos不支持2TB以上容量的磁盘，所以大于2TB的磁盘选gpt分区表格式）\n \n警告: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost. Do you want to continue?\n# /dev/sdb上现有的磁盘标签将被销毁，该磁盘上的所有数据将丢失。你想要继续\n是/Yes/否/No? yes                                                         \n \n(parted) mkpart p1\n# 创建第一个分区，名称为p1（p1只是第一个分区的名称，用别的名称也可以，如part1）\n \n文件系统类型？  [ext2]? xfs        \n# 定义分区格式（不支持ext4，想分ext4格式的分区，可以通过mkfs.ext4格式化成ext4格式）\n                                       \n起始点？ 1       \n# 定义分区的起始位置（单位支持K,M,G,T）\n                                                         \n结束点？ 100%   \n# 定义分区的结束位置（单位支持K,M,G,T）    \n                                                      \n(parted) print   # 查看当前分区情况\nModel: VMware, VMware Virtual S (scsi)\nDisk /dev/sdb: 107GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags: \n \nNumber  Start   End    Size   File system  Name  标志\n 1      1049kB  107GB  107GB  xfs          p1\n```\n\nparted删除分析\n```\n$ parted /dev/sdb\n# 对/dev/sdb进行分区或管理操作\n \n(parted) rm                \n# rm删除命令（删除之前必须确保分区没有被挂载）\n                                               \n分区编号？ 1          \n# 删除第一个分区\n                                                    \n(parted) print   # 打印当前分区情况                                                         \nModel: VMware, VMware Virtual S (scsi)\nDisk /dev/sdb: 107GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags: \n \nNumber  Start  End  Size  File system  Name  标志\n```\n#### 磁盘格式化\n```\n$ sudo mkfs.ext4 /dev/sdc1\n或\n$ sudo mkfs -t ext4 /dev/sdc1\n或\n$ sudo mke2fs /dev/sdc1\nmke2fs 1.43.5 (04-Aug-2017)\nCreating filesystem with 262144 4k blocks and 65536 inodes\nFilesystem UUID: c0a99b51-2b61-4f6a-b960-eb60915faab0\nSuperblock backups stored on blocks:\n    32768, 98304, 163840, 229376\nAllocating group tables: done\nWriting inode tables: done\nCreating journal (8192 blocks): done\nWriting superblocks and filesystem accounting information: done\n```\n\n- Filesystem UUID: UUID 代表了通用且独一无二的识别符，UUID 在 Linux 中通常用来识别设备。它 128 位长的数字代表了 32 个十六进制数。\n- Superblock: 超级块储存了文件系统的元数据。如果某个文件系统的超级块被破坏，我们就无法挂载它了（也就是说无法访问其中的文件了）。\n- Inode: Inode 是类 Unix 系统中文件系统的数据结构，它储存了所有除名称以外的文件信息和数据。\n- Journal: 日志式文件系统包含了用来修复电脑意外关机产生下错误信息的日志。\n\n#### 挂载分区\n在创建完分区和文件系统之后，我们需要挂载它们以便使用。我们需要创建一个挂载点来挂载分区，使用 mkdir 来创建一个挂载点。\n```bash\n# 创建挂载点\nsudo mkdir -p /mnt/2g-new\n```\n\n进行临时挂载，请使用下面的命令。在计算机重启之后，你会丢失这个挂载点。\n```bash\nsudo mount /dev/sdc1 /mnt/2g-new\n```\n\n如果你希望永久挂载某个分区，请将分区详情加入 fstab 文件。我们既可以输入设备名称，也可以输入 UUID。 推荐使用设备名称挂载。\n```bash\n# vi /etc/fstab\n/dev/sdc1 /mnt/2g-new ext4 defaults 0 0\n```\n\n也可以使用 UUID 来进行永久挂载（请使用 blkid 来获取 UUID）：\n```bash\n$ sudo blkid\n/dev/sdc1: UUID=\"d17e3c31-e2c9-4f11-809c-94a549bc43b7\" TYPE=\"ext2\" PARTUUID=\"8cc8f9e5-01\"\n/dev/sda1: UUID=\"d92fa769-e00f-4fd7-b6ed-ecf7224af7fa\" TYPE=\"ext4\" PARTUUID=\"eab59449-01\"\n/dev/sdc3: UUID=\"ca307aa4-0866-49b1-8184-004025789e63\" TYPE=\"ext4\" PARTUUID=\"8cc8f9e5-03\"\n/dev/sdc5: PARTUUID=\"8cc8f9e5-05\"\n# vi /etc/fstab\nUUID=d17e3c31-e2c9-4f11-809c-94a549bc43b7 /mnt/2g-new ext4 defaults 0 0\n```\n#### 校验修改是否正常\nmount -a 命令无报错\n```bash\nmount -a\n```\n#### 查看分区空间\ndf 命令用于查看磁盘分区的空间及使用和剩余的空间信息。\n\n```bash\n# 默认显示所有挂载的磁盘，默认以 KB 为单位。\n[Linux]$  df\n文件系统          1K-块     已用     可用 已用% 挂载点\nudev            3975328        0  3975328    0% /dev\ntmpfs            799028     9516   789512    2% /run\n/dev/mmcblk0p3 21977248 12651688  8186104   61% /\ntmpfs           3995128   120492  3874636    4% /dev/shm\ntmpfs              5120        4     5116    1% /run/lock\ntmpfs           3995128        0  3995128    0% /sys/fs/cgroup\n/dev/mmcblk0p4 95569324 10825896 79845740   12% /home/xiao/Videos/vlc\n/dev/mmcblk0p1    94759     5199    89560    6% /boot/efi\ntmpfs            799024       20   799004    1% /run/user/1000\n\n# 以更可读的方式显示\n[Linux]$  df -h\n文件系统        容量  已用  可用 已用% 挂载点\nudev            3.8G     0  3.8G    0% /dev\ntmpfs           781M  9.3M  772M    2% /run\n/dev/mmcblk0p3   21G   13G  7.9G   61% /\ntmpfs           3.9G  118M  3.7G    4% /dev/shm\ntmpfs           5.0M  4.0K  5.0M    1% /run/lock\ntmpfs           3.9G     0  3.9G    0% /sys/fs/cgroup\n/dev/mmcblk0p4   92G   11G   77G   12% /home/xiao/Videos/vlc\n/dev/mmcblk0p1   93M  5.1M   88M    6% /boot/efi\ntmpfs           781M   20K  781M    1% /run/user/1000\n```\n\n### 用户管理\n#### 用户分组\n\n在ubuntu系统创建新用户群组ai-study。\n```bash\n$ groupadd ai-study\n```\n\n#### 创建用户并加入分组\n```bash\n#参数-m 自动创建用户的home目录\n$ useradd -m user05  \n\n# 创建用户user05,账号家目录为/home/user05, 附加组为ai-study\n$ useradd -d /home/user05 -G ai-study user05\n\n#为用户user05设置密码\n$ passwd user05 \n\n#添加普通用户user05到附加组ai-study\n$ sudo usermod -a -G ai-study user01  \n\n# 查看用户分组信息\n$ id user05\n```\n\n#### 查看分组下的用户\n```bash\n### 查看ai-study用户组下的所有用户\ngrep 'ai-study' /etc/group\n\n# 查看root用户组下的所有用户\ngrep 'root' /etc/group\n```\n\n#### 分组内共享文件\n```bash\n# 创建共享文件夹work-share\n$ mkdir /data/work-share   \n\n# 将work-share文件夹共享给ai-study 用户组\n$ chgrp ai-study /data/work-share/\n```\n\n#### 批量创建用户\n下列操作见目录《批量生成账号并修改目录》\nuser.txt\n```bash\nuser01\nuser02\nuser03\n```\n\npasswd.txt\n```bash\nuser01:123456\nuser02:123456\nuser03:123456\n```\n\n执行脚本:\n```bash\n#!/bin/bash\nfor user in `cat user.txt`; do\n  ## 创建用户，并指定用户所在目录\n  useradd -d /home/$user -G ai-study $user\n  echo \"123456\" | passwd --stdin $user\n  echo \"密码写入成功\"\ndone\n\n### 修改密码\nchpasswd < passwd.txt\npwconv\ncat passwd.txt\n```\n### 远程登录\n#### 通过ssh登录主机\n```bash\nssh user01@192.168.22.31\n```\n\n#### scp拷贝文件\n```bash\n## 将本机的text.zip文件，拷贝到远程主机的/home/user01/目录。\nscp text.zip user01@192.168.22.31:/home/user01/\n\n## 将远程主机的/home/user01/test.zip文件，拷贝到本机的当前目录\nscp user01@192.168.22.31:/home/user01/test.zip .\n```\n\n#### 查看当前登录主机的用户\n```bash\n# 列出本机所有的 session\n# 不带参数执行 loginctl 和执行 loginctl list-sessions 效果一样\n[Linux]$ loginctl\nSESSION  UID USER SEAT TTY\n  1 1000 xiao      pts/0\n  5 1000 xiao      pts/1\n\n2 sessions listed.\n\n\n# 查看 session 的详细信息\n[Linux]$ loginctl show-session 5\nEnableWallMessages=no\nNAutoVTs=6\nKillUserProcesses=no\nRebootToFirmwareSetup=no\nIdleSinceHint=1627474393034083\nUserStopDelayUSec=10s\nHandlePowerKey=poweroff\nIdleAction=ignore\nPreparingForShutdown=no\nDocked=no\nNCurrentSessions=2\n...\n\n\n# 杀死 session\n[Linux]$ loginctl kill-session 976\n\n\n# 查看登录用户的详细信息\n[Linux]$ loginctl show-user 1000\nUID=1000\nGID=1000\nName=xiao\nTimestamp=Wed 2021-07-28 18:53:32 CST\nRuntimePath=/run/user/1000\nSlice=user-1000.slice\n...\n\n\n# 查看登录用户的状态\n[Linux]$ loginctl user-status xiao\nxiao (1000)\n           Since: Wed 2021-07-28 18:53:32 CST; 1h 25min ago\n           State: active\n        Sessions: 5 *1\n          Linger: no\n            Unit: user-1000.slice\n                  ├─session-1.scope\n                  │ ├─730 sshd: xiao [priv]\n                  │ ├─747 sshd: xiao@pts/0\n                  │ ├─748 -bash\n                  │ └─851 vim 00_loginctl.rst\n                  ├─session-5.scope\n                  │ ├─852 sshd: xiao [priv]\n                  │ ├─858 sshd: xiao@pts/1\n                  │ ├─859 -bash\n                  │ ├─862 su\n                  │ ├─863 bash\n                  │ ├─934 loginctl user-status xiao\n                  │ └─935 pager\n                  └─user@1000.service\n                    └─init.scope\n                      ├─733 /lib/systemd/systemd --user\n                      └─734 (sd-pam)\n\nJul 28 18:53:33 debian systemd[733]: Listening on GnuPG cryptographic agent and passphrase\nJul 28 18:53:33 debian systemd[733]: Listening on GnuPG cryptographic agent (ssh-agent emu\n```\n\n### 网络管理\n#### Linux设置固定IP\n1. 进入到/etc/sysconfig/network-scripts \n2. 编辑对应iface的文件，将BOOTPROTO=dhcp的值改为static，并在最后面加上IP信息。\n```\n#BOOTPROTO=dhcp\nBOOTPROTO=static \n\nIPADDR=192.168.8.101\nNETMASK=255.255.255.0 \nGATEWAY=192.168.8.1\nDNS1=114.114.114.114\n```\n\n#### 网络连接分析\n查看当前系统TCP连接状态\n```bash\nnetstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'\n```\n\n- netstat -n，这个命令负责查看主机上的所有 TCP、UDP 连接信息，i\n- awk 命令则负责对这些信息进行进一步的处理，awk 后有一个用两个 \"斜杠\" 括起来的正则表达式，主要用来匹配以 tcp 开头的每一行信息，所以这里的正则表达式起到了一个过滤的作用（只分析tcp的连接），后面则是对信息过滤后进行具体的统计和输出\n\n#### 查看IP\n```bash\nip a | grep global | awk '{print $2}' | awk -F/ '{print $1}'\n```\n\n#### netcat连通性测试\n```bash\n## TCP\nnc -z -v 192.168.1.60 19000-19100 2>&1 | grep succeeded\n\n## UDP\nnc -z -v -u 192.168.1.60 19000-19100 2>&1 | grep succeeded\n```\n\n\n### 修改swap交换分区\nLinux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。Android是基于Linux的操作系统，所以也可以使用Swap分区来提升系统运行效率。\n\n#### 查看swap状态\n```bash\nfree -h\nswapon -s\n```\n\n```bash\n### 生成文件\nmkdir /usr/swap\ndd if=/dev/zero of=/usr/swap/swapfile1 bs=1M count=2048\n\n## 目标文件表示为swap分区文件\nmkswap /usr/swap/swapfile1\nchmod 600 /usr/swap/swapfile1\n\n## 激活swap文件\nswapon /usr/swap/swapfile1\n\n## 自动挂载\nvim /etc/fstab\n##添加\n/usr/swap/swapfile1 swap swap defaults 0 0\n```\n\n#### 修改swapiness设置swap使用时机\n```bash\ncat /proc/sys/vm/swappiness\n\n## 临时修改\nsysctl vm.swappiness=60\n\n## sysctl.conf 持久化\nvm.swappiness=60\n```\n- 0意味着“在任何情况下都不要发生交换”。\n- swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。\n\n#### 关闭swap\n```bash\n## 临时修改\nswapoff\n\n# 删除/etc/fsta添加的内容\n```nux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。Android是基于Linux的操作系统，所以也可以使用Swap分区来提升系统运行效率。\n\n### 查看swap状态\n```bash\nfree -h\n\nswapon -s\n```\n\n```bash\n### 生成文件\nmkdir /usr/swap\ndd if=/dev/zero of=/usr/swap/swapfile1 bs=1M count=2048\n\n## 目标文件表示为swap分区文件\nmkswap /usr/swap/swapfile1\nchmod 600 /usr/swap/swapfile1\n\n## 激活swap文件\nswapon /usr/swap/swapfile1\n\n## 自动挂载\nvim /etc/fstab\n##添加\n/usr/swap/swapfile1 swap swap defaults 0 0\n```\n\n#### 修改swapiness设置swap使用时机\n```bash\ncat /proc/sys/vm/swappiness\n\n## 临时修改\nsysctl vm.swappiness=60\n\n## sysctl.conf 持久化\nvm.swappiness=60\n```\n- 0意味着“在任何情况下都不要发生交换”。\n- swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。\n\n#### 关闭swap\n```bash\n## 临时修改\nswapoff\n\n# 删除/etc/fsta添加的内容\n```\n\n\n### 常用脚本\n#### 操作快捷键\n- Ctrl + r：可以快速查找历史命令；\n- Ctrl + l：可以清理控制台屏幕；\n- Ctrl + a \\ Ctrl + e：移动光标到命令行首\\行尾；\n- Ctrl + w \\ Ctrl + k：删除光标之前\\之后的内容。\n- Ctrl + c：强制终止程序的执行；\n- Ctrl + z：挂起一个进程；\n- Ctrl + d：终端中输入 exit 后回车。\n\n#### 磁盘空间分析\n\n##### 查看系统最大文件\n当磁盘空间不足，需要快速定位或者对文件使用率进行排序，需要查看哪一些文件目录或者文件占用的空间比较多，就需要如下组合命令。\n\n```bash\ndu -x --max-depth=1 / | sort -k1 -nr\n```\n\ndu命令\n-  -x 参数表示跳过其他文件系统，也就是只分析本文件系统里的文件，它可以帮助我们排除一些非本文件系统的统计信息，这样执行速度会更快也不容易出现一些额外的干扰项。\n- --max-depth 参数设置为 1，这样就可以统计出根目录下第一级目录中的所有文件的大小。\n\nsort命令\n- -k 参数指明具体按照哪一列进行排序\n- -n 参数表示只对数值进行排序，\n- -r 参数表示反向排序\n\n##### 查找目录下文件数量\n适用于系统上产生很多碎片文件时，随之产生大量的 Inode ， Inode 用于存放着文件系统中文件的源数据，Inode过渡的使用会导致系统 Inode 资源不足。这种情况是不正常的，这个时候分析如果通过du 命令指能具体展示出磁盘空间的使用情况，但并不能分析出具体目录下产生了多少碎片文件，我们就需要如下的命令组合来对文件进行统计分析。\n\n```bash\nfind . -type f | awk -F / -v OFS=/ '{$NF=\"\";dir[$0]++}END{for(i in dir)print dir[i]\" \"i}' | sort -k1 -nr | head\n```\n\nfind命令\n- -type f 查找指定文件类型\n\nawk命令\n- -F / 指定处理文件时字符串之间以/分割\n- -v OFS=/ 显示结果时以/分割展示\n- awk的{} END {}格式， 前面{}表示行处理操作，END{}表示行处理后需要进行增提输出。\n- $NF设置为空，表示将每一行的文件名信息去除，从而保留文件路径\n- dir 是一个自增数组，用于统计结果\n\n#### 批量文件修改\n\n#### 批量文件改名\n```bash\nrename .yml _pre.yml *\n```\n#### awk 文档处理\n```bash\n# 排序\ncat fund_cust.txt | sort > fund_cust_sort.txt\n\n## 取奇数行\ncat fund_cust_sort.txt | awk '{if (NR%2==1) print $0}' > fund_cust_sort_1.txt\n\n### 取偶数行\ncat fund_cust_sort.txt | awk '{if (NR%2==0) print $0}' > fund_cust_sort_2.txt\n\n### 合并\n# NR：awk 处理的当前的行数，从1开始，直到所有文件处理完\n# FNR：awk 处理的当前行在当前文件中所在的行数，从1开始，直到当前这个文件处理完，且在下一个文件会重新计数\n# NR==FNR：表示当在处理第一个文件时\n# a[NR]=$0：表示建立一个数组a，每行的行号和改行的内容形成一一对应的关系\n# nr=NR：这里用nr这个变量记录第一个文件的行数；每处理一行nr被刷新一次，直到第一个文件结尾，最后nr就是第一个文件的行数！\n# NR>FNR：表示处理第二个文件时\n# a[NR-nr]：表示第一个文件的内容\n# $0：表示第二个文件的每行的所有内容\nawk 'NR==FNR{a[NR]=$1\",\"$2\",\"$3;nr=NR;} NR>FNR{print a[NR-nr]\",\"$3\",\"$1}' fund_cust_sort_1.txt fund_cust_sort_2.txt > fund_cust.csv\n\n##gbk 转化为utf8\niconv -f gbk -t utf-8 2023-01-09.log > 2023-01-09_1.log\n\n## 分隔符使用[]处理为 '[][]'\ntail -65000 2023-01-09_1.log |  awk -F'[][]' '/请求功能号为/{print $18\" \"$12\" \" $1}' | sort -n \n\n## 搜索过滤\ncat last05.log | awk -F'[: ]' '/结束,共花费时间/{print $8\" \"$13$14}'\n```\n\n##### 批量替换文件中内容\n```bash\nfind ./-type f -name application.yml -exec sed -i\"s/aaaaaa/bbbbbb/g\"{}\\; \n\nls | xargs sed -i\"2s/aa/bb/g\";\n```\n\nfind 命令, \n- -name 参数指定查找的文件名\n- -exec 参数将查找到的内容传递给下一个命令去继续执行相关逻辑\n \nsed 命令\n主要对文件内容进行替换，这里会将 application.yml 文件中的 aaaaaa 替换成 bbbbbb\n\n### 文件打包\n查找所有的txt文件，打包并拷贝\n```bash\n(find . -name \"*.txt\" | xargs tar -cvf test.tar) && cp -f test.tar ~\n```","source":"_posts/Linux/Linux常用运维.md","raw":"---\ntitle: Linux常用运维\ndate: 2023-12-29 13:15:56\ntags:\n  - 技术笔记\n  - Linux\n---\n\n### 磁盘管理\n\n#### 磁盘分区\n\n通用分区使用fdisk，如果需要分配超过1T的分区，使用parted。 \n##### fidsk分区\n```bash\n# 操作磁盘\n$ fdisk /dev/sdc\nWelcome to fdisk (util-linux 2.30.1).\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\n\n# 新建分区\nCommand (m for help): n\nPartition type\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended (container for logical partitions)\n\n# 分区类型：p 主分区；e 扩展分区\nSelect (default p): Enter\nUsing default response p.\nPartition number (1-4, default 1): Enter\nFirst sector (2048-20971519, default 2048): Enter\n\n# 分区大小\nLast sector, +sectors or +size{K,M,G,T,P} (2048-20971519, default 20971519): +1G\nCreated a new partition 1 of type 'Linux' and of size 1 GiB.\n\nCommand (m for help): p\nDisk /dev/sdc: 10 GiB, 10737418240 bytes, 20971520 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x8cc8f9e5\nDevice     Boot Start     End Sectors Size Id Type\n/dev/sdc1        2048 2099199 2097152   1G 83 Linux\n\n# 保存分区表\nCommand (m for help): w\nThe partition table has been altered.\nCalling ioctl() to re-read partition table.\nSyncing disks.\n```\n\n##### parted分区\n超过1T的大空间分区，操作如下\n```\n$ parted /dev/sdb\n# 对/dev/sdb进行分区或管理操作\n \nGNU Parted 3.1\n使用 /dev/sdb\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n \n(parted) mklabel gpt\n# 定义分区表格式（常用的有msdos和gpt分区表格式，msdos不支持2TB以上容量的磁盘，所以大于2TB的磁盘选gpt分区表格式）\n \n警告: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost. Do you want to continue?\n# /dev/sdb上现有的磁盘标签将被销毁，该磁盘上的所有数据将丢失。你想要继续\n是/Yes/否/No? yes                                                         \n \n(parted) mkpart p1\n# 创建第一个分区，名称为p1（p1只是第一个分区的名称，用别的名称也可以，如part1）\n \n文件系统类型？  [ext2]? xfs        \n# 定义分区格式（不支持ext4，想分ext4格式的分区，可以通过mkfs.ext4格式化成ext4格式）\n                                       \n起始点？ 1       \n# 定义分区的起始位置（单位支持K,M,G,T）\n                                                         \n结束点？ 100%   \n# 定义分区的结束位置（单位支持K,M,G,T）    \n                                                      \n(parted) print   # 查看当前分区情况\nModel: VMware, VMware Virtual S (scsi)\nDisk /dev/sdb: 107GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags: \n \nNumber  Start   End    Size   File system  Name  标志\n 1      1049kB  107GB  107GB  xfs          p1\n```\n\nparted删除分析\n```\n$ parted /dev/sdb\n# 对/dev/sdb进行分区或管理操作\n \n(parted) rm                \n# rm删除命令（删除之前必须确保分区没有被挂载）\n                                               \n分区编号？ 1          \n# 删除第一个分区\n                                                    \n(parted) print   # 打印当前分区情况                                                         \nModel: VMware, VMware Virtual S (scsi)\nDisk /dev/sdb: 107GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags: \n \nNumber  Start  End  Size  File system  Name  标志\n```\n#### 磁盘格式化\n```\n$ sudo mkfs.ext4 /dev/sdc1\n或\n$ sudo mkfs -t ext4 /dev/sdc1\n或\n$ sudo mke2fs /dev/sdc1\nmke2fs 1.43.5 (04-Aug-2017)\nCreating filesystem with 262144 4k blocks and 65536 inodes\nFilesystem UUID: c0a99b51-2b61-4f6a-b960-eb60915faab0\nSuperblock backups stored on blocks:\n    32768, 98304, 163840, 229376\nAllocating group tables: done\nWriting inode tables: done\nCreating journal (8192 blocks): done\nWriting superblocks and filesystem accounting information: done\n```\n\n- Filesystem UUID: UUID 代表了通用且独一无二的识别符，UUID 在 Linux 中通常用来识别设备。它 128 位长的数字代表了 32 个十六进制数。\n- Superblock: 超级块储存了文件系统的元数据。如果某个文件系统的超级块被破坏，我们就无法挂载它了（也就是说无法访问其中的文件了）。\n- Inode: Inode 是类 Unix 系统中文件系统的数据结构，它储存了所有除名称以外的文件信息和数据。\n- Journal: 日志式文件系统包含了用来修复电脑意外关机产生下错误信息的日志。\n\n#### 挂载分区\n在创建完分区和文件系统之后，我们需要挂载它们以便使用。我们需要创建一个挂载点来挂载分区，使用 mkdir 来创建一个挂载点。\n```bash\n# 创建挂载点\nsudo mkdir -p /mnt/2g-new\n```\n\n进行临时挂载，请使用下面的命令。在计算机重启之后，你会丢失这个挂载点。\n```bash\nsudo mount /dev/sdc1 /mnt/2g-new\n```\n\n如果你希望永久挂载某个分区，请将分区详情加入 fstab 文件。我们既可以输入设备名称，也可以输入 UUID。 推荐使用设备名称挂载。\n```bash\n# vi /etc/fstab\n/dev/sdc1 /mnt/2g-new ext4 defaults 0 0\n```\n\n也可以使用 UUID 来进行永久挂载（请使用 blkid 来获取 UUID）：\n```bash\n$ sudo blkid\n/dev/sdc1: UUID=\"d17e3c31-e2c9-4f11-809c-94a549bc43b7\" TYPE=\"ext2\" PARTUUID=\"8cc8f9e5-01\"\n/dev/sda1: UUID=\"d92fa769-e00f-4fd7-b6ed-ecf7224af7fa\" TYPE=\"ext4\" PARTUUID=\"eab59449-01\"\n/dev/sdc3: UUID=\"ca307aa4-0866-49b1-8184-004025789e63\" TYPE=\"ext4\" PARTUUID=\"8cc8f9e5-03\"\n/dev/sdc5: PARTUUID=\"8cc8f9e5-05\"\n# vi /etc/fstab\nUUID=d17e3c31-e2c9-4f11-809c-94a549bc43b7 /mnt/2g-new ext4 defaults 0 0\n```\n#### 校验修改是否正常\nmount -a 命令无报错\n```bash\nmount -a\n```\n#### 查看分区空间\ndf 命令用于查看磁盘分区的空间及使用和剩余的空间信息。\n\n```bash\n# 默认显示所有挂载的磁盘，默认以 KB 为单位。\n[Linux]$  df\n文件系统          1K-块     已用     可用 已用% 挂载点\nudev            3975328        0  3975328    0% /dev\ntmpfs            799028     9516   789512    2% /run\n/dev/mmcblk0p3 21977248 12651688  8186104   61% /\ntmpfs           3995128   120492  3874636    4% /dev/shm\ntmpfs              5120        4     5116    1% /run/lock\ntmpfs           3995128        0  3995128    0% /sys/fs/cgroup\n/dev/mmcblk0p4 95569324 10825896 79845740   12% /home/xiao/Videos/vlc\n/dev/mmcblk0p1    94759     5199    89560    6% /boot/efi\ntmpfs            799024       20   799004    1% /run/user/1000\n\n# 以更可读的方式显示\n[Linux]$  df -h\n文件系统        容量  已用  可用 已用% 挂载点\nudev            3.8G     0  3.8G    0% /dev\ntmpfs           781M  9.3M  772M    2% /run\n/dev/mmcblk0p3   21G   13G  7.9G   61% /\ntmpfs           3.9G  118M  3.7G    4% /dev/shm\ntmpfs           5.0M  4.0K  5.0M    1% /run/lock\ntmpfs           3.9G     0  3.9G    0% /sys/fs/cgroup\n/dev/mmcblk0p4   92G   11G   77G   12% /home/xiao/Videos/vlc\n/dev/mmcblk0p1   93M  5.1M   88M    6% /boot/efi\ntmpfs           781M   20K  781M    1% /run/user/1000\n```\n\n### 用户管理\n#### 用户分组\n\n在ubuntu系统创建新用户群组ai-study。\n```bash\n$ groupadd ai-study\n```\n\n#### 创建用户并加入分组\n```bash\n#参数-m 自动创建用户的home目录\n$ useradd -m user05  \n\n# 创建用户user05,账号家目录为/home/user05, 附加组为ai-study\n$ useradd -d /home/user05 -G ai-study user05\n\n#为用户user05设置密码\n$ passwd user05 \n\n#添加普通用户user05到附加组ai-study\n$ sudo usermod -a -G ai-study user01  \n\n# 查看用户分组信息\n$ id user05\n```\n\n#### 查看分组下的用户\n```bash\n### 查看ai-study用户组下的所有用户\ngrep 'ai-study' /etc/group\n\n# 查看root用户组下的所有用户\ngrep 'root' /etc/group\n```\n\n#### 分组内共享文件\n```bash\n# 创建共享文件夹work-share\n$ mkdir /data/work-share   \n\n# 将work-share文件夹共享给ai-study 用户组\n$ chgrp ai-study /data/work-share/\n```\n\n#### 批量创建用户\n下列操作见目录《批量生成账号并修改目录》\nuser.txt\n```bash\nuser01\nuser02\nuser03\n```\n\npasswd.txt\n```bash\nuser01:123456\nuser02:123456\nuser03:123456\n```\n\n执行脚本:\n```bash\n#!/bin/bash\nfor user in `cat user.txt`; do\n  ## 创建用户，并指定用户所在目录\n  useradd -d /home/$user -G ai-study $user\n  echo \"123456\" | passwd --stdin $user\n  echo \"密码写入成功\"\ndone\n\n### 修改密码\nchpasswd < passwd.txt\npwconv\ncat passwd.txt\n```\n### 远程登录\n#### 通过ssh登录主机\n```bash\nssh user01@192.168.22.31\n```\n\n#### scp拷贝文件\n```bash\n## 将本机的text.zip文件，拷贝到远程主机的/home/user01/目录。\nscp text.zip user01@192.168.22.31:/home/user01/\n\n## 将远程主机的/home/user01/test.zip文件，拷贝到本机的当前目录\nscp user01@192.168.22.31:/home/user01/test.zip .\n```\n\n#### 查看当前登录主机的用户\n```bash\n# 列出本机所有的 session\n# 不带参数执行 loginctl 和执行 loginctl list-sessions 效果一样\n[Linux]$ loginctl\nSESSION  UID USER SEAT TTY\n  1 1000 xiao      pts/0\n  5 1000 xiao      pts/1\n\n2 sessions listed.\n\n\n# 查看 session 的详细信息\n[Linux]$ loginctl show-session 5\nEnableWallMessages=no\nNAutoVTs=6\nKillUserProcesses=no\nRebootToFirmwareSetup=no\nIdleSinceHint=1627474393034083\nUserStopDelayUSec=10s\nHandlePowerKey=poweroff\nIdleAction=ignore\nPreparingForShutdown=no\nDocked=no\nNCurrentSessions=2\n...\n\n\n# 杀死 session\n[Linux]$ loginctl kill-session 976\n\n\n# 查看登录用户的详细信息\n[Linux]$ loginctl show-user 1000\nUID=1000\nGID=1000\nName=xiao\nTimestamp=Wed 2021-07-28 18:53:32 CST\nRuntimePath=/run/user/1000\nSlice=user-1000.slice\n...\n\n\n# 查看登录用户的状态\n[Linux]$ loginctl user-status xiao\nxiao (1000)\n           Since: Wed 2021-07-28 18:53:32 CST; 1h 25min ago\n           State: active\n        Sessions: 5 *1\n          Linger: no\n            Unit: user-1000.slice\n                  ├─session-1.scope\n                  │ ├─730 sshd: xiao [priv]\n                  │ ├─747 sshd: xiao@pts/0\n                  │ ├─748 -bash\n                  │ └─851 vim 00_loginctl.rst\n                  ├─session-5.scope\n                  │ ├─852 sshd: xiao [priv]\n                  │ ├─858 sshd: xiao@pts/1\n                  │ ├─859 -bash\n                  │ ├─862 su\n                  │ ├─863 bash\n                  │ ├─934 loginctl user-status xiao\n                  │ └─935 pager\n                  └─user@1000.service\n                    └─init.scope\n                      ├─733 /lib/systemd/systemd --user\n                      └─734 (sd-pam)\n\nJul 28 18:53:33 debian systemd[733]: Listening on GnuPG cryptographic agent and passphrase\nJul 28 18:53:33 debian systemd[733]: Listening on GnuPG cryptographic agent (ssh-agent emu\n```\n\n### 网络管理\n#### Linux设置固定IP\n1. 进入到/etc/sysconfig/network-scripts \n2. 编辑对应iface的文件，将BOOTPROTO=dhcp的值改为static，并在最后面加上IP信息。\n```\n#BOOTPROTO=dhcp\nBOOTPROTO=static \n\nIPADDR=192.168.8.101\nNETMASK=255.255.255.0 \nGATEWAY=192.168.8.1\nDNS1=114.114.114.114\n```\n\n#### 网络连接分析\n查看当前系统TCP连接状态\n```bash\nnetstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'\n```\n\n- netstat -n，这个命令负责查看主机上的所有 TCP、UDP 连接信息，i\n- awk 命令则负责对这些信息进行进一步的处理，awk 后有一个用两个 \"斜杠\" 括起来的正则表达式，主要用来匹配以 tcp 开头的每一行信息，所以这里的正则表达式起到了一个过滤的作用（只分析tcp的连接），后面则是对信息过滤后进行具体的统计和输出\n\n#### 查看IP\n```bash\nip a | grep global | awk '{print $2}' | awk -F/ '{print $1}'\n```\n\n#### netcat连通性测试\n```bash\n## TCP\nnc -z -v 192.168.1.60 19000-19100 2>&1 | grep succeeded\n\n## UDP\nnc -z -v -u 192.168.1.60 19000-19100 2>&1 | grep succeeded\n```\n\n\n### 修改swap交换分区\nLinux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。Android是基于Linux的操作系统，所以也可以使用Swap分区来提升系统运行效率。\n\n#### 查看swap状态\n```bash\nfree -h\nswapon -s\n```\n\n```bash\n### 生成文件\nmkdir /usr/swap\ndd if=/dev/zero of=/usr/swap/swapfile1 bs=1M count=2048\n\n## 目标文件表示为swap分区文件\nmkswap /usr/swap/swapfile1\nchmod 600 /usr/swap/swapfile1\n\n## 激活swap文件\nswapon /usr/swap/swapfile1\n\n## 自动挂载\nvim /etc/fstab\n##添加\n/usr/swap/swapfile1 swap swap defaults 0 0\n```\n\n#### 修改swapiness设置swap使用时机\n```bash\ncat /proc/sys/vm/swappiness\n\n## 临时修改\nsysctl vm.swappiness=60\n\n## sysctl.conf 持久化\nvm.swappiness=60\n```\n- 0意味着“在任何情况下都不要发生交换”。\n- swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。\n\n#### 关闭swap\n```bash\n## 临时修改\nswapoff\n\n# 删除/etc/fsta添加的内容\n```nux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。Android是基于Linux的操作系统，所以也可以使用Swap分区来提升系统运行效率。\n\n### 查看swap状态\n```bash\nfree -h\n\nswapon -s\n```\n\n```bash\n### 生成文件\nmkdir /usr/swap\ndd if=/dev/zero of=/usr/swap/swapfile1 bs=1M count=2048\n\n## 目标文件表示为swap分区文件\nmkswap /usr/swap/swapfile1\nchmod 600 /usr/swap/swapfile1\n\n## 激活swap文件\nswapon /usr/swap/swapfile1\n\n## 自动挂载\nvim /etc/fstab\n##添加\n/usr/swap/swapfile1 swap swap defaults 0 0\n```\n\n#### 修改swapiness设置swap使用时机\n```bash\ncat /proc/sys/vm/swappiness\n\n## 临时修改\nsysctl vm.swappiness=60\n\n## sysctl.conf 持久化\nvm.swappiness=60\n```\n- 0意味着“在任何情况下都不要发生交换”。\n- swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。\n\n#### 关闭swap\n```bash\n## 临时修改\nswapoff\n\n# 删除/etc/fsta添加的内容\n```\n\n\n### 常用脚本\n#### 操作快捷键\n- Ctrl + r：可以快速查找历史命令；\n- Ctrl + l：可以清理控制台屏幕；\n- Ctrl + a \\ Ctrl + e：移动光标到命令行首\\行尾；\n- Ctrl + w \\ Ctrl + k：删除光标之前\\之后的内容。\n- Ctrl + c：强制终止程序的执行；\n- Ctrl + z：挂起一个进程；\n- Ctrl + d：终端中输入 exit 后回车。\n\n#### 磁盘空间分析\n\n##### 查看系统最大文件\n当磁盘空间不足，需要快速定位或者对文件使用率进行排序，需要查看哪一些文件目录或者文件占用的空间比较多，就需要如下组合命令。\n\n```bash\ndu -x --max-depth=1 / | sort -k1 -nr\n```\n\ndu命令\n-  -x 参数表示跳过其他文件系统，也就是只分析本文件系统里的文件，它可以帮助我们排除一些非本文件系统的统计信息，这样执行速度会更快也不容易出现一些额外的干扰项。\n- --max-depth 参数设置为 1，这样就可以统计出根目录下第一级目录中的所有文件的大小。\n\nsort命令\n- -k 参数指明具体按照哪一列进行排序\n- -n 参数表示只对数值进行排序，\n- -r 参数表示反向排序\n\n##### 查找目录下文件数量\n适用于系统上产生很多碎片文件时，随之产生大量的 Inode ， Inode 用于存放着文件系统中文件的源数据，Inode过渡的使用会导致系统 Inode 资源不足。这种情况是不正常的，这个时候分析如果通过du 命令指能具体展示出磁盘空间的使用情况，但并不能分析出具体目录下产生了多少碎片文件，我们就需要如下的命令组合来对文件进行统计分析。\n\n```bash\nfind . -type f | awk -F / -v OFS=/ '{$NF=\"\";dir[$0]++}END{for(i in dir)print dir[i]\" \"i}' | sort -k1 -nr | head\n```\n\nfind命令\n- -type f 查找指定文件类型\n\nawk命令\n- -F / 指定处理文件时字符串之间以/分割\n- -v OFS=/ 显示结果时以/分割展示\n- awk的{} END {}格式， 前面{}表示行处理操作，END{}表示行处理后需要进行增提输出。\n- $NF设置为空，表示将每一行的文件名信息去除，从而保留文件路径\n- dir 是一个自增数组，用于统计结果\n\n#### 批量文件修改\n\n#### 批量文件改名\n```bash\nrename .yml _pre.yml *\n```\n#### awk 文档处理\n```bash\n# 排序\ncat fund_cust.txt | sort > fund_cust_sort.txt\n\n## 取奇数行\ncat fund_cust_sort.txt | awk '{if (NR%2==1) print $0}' > fund_cust_sort_1.txt\n\n### 取偶数行\ncat fund_cust_sort.txt | awk '{if (NR%2==0) print $0}' > fund_cust_sort_2.txt\n\n### 合并\n# NR：awk 处理的当前的行数，从1开始，直到所有文件处理完\n# FNR：awk 处理的当前行在当前文件中所在的行数，从1开始，直到当前这个文件处理完，且在下一个文件会重新计数\n# NR==FNR：表示当在处理第一个文件时\n# a[NR]=$0：表示建立一个数组a，每行的行号和改行的内容形成一一对应的关系\n# nr=NR：这里用nr这个变量记录第一个文件的行数；每处理一行nr被刷新一次，直到第一个文件结尾，最后nr就是第一个文件的行数！\n# NR>FNR：表示处理第二个文件时\n# a[NR-nr]：表示第一个文件的内容\n# $0：表示第二个文件的每行的所有内容\nawk 'NR==FNR{a[NR]=$1\",\"$2\",\"$3;nr=NR;} NR>FNR{print a[NR-nr]\",\"$3\",\"$1}' fund_cust_sort_1.txt fund_cust_sort_2.txt > fund_cust.csv\n\n##gbk 转化为utf8\niconv -f gbk -t utf-8 2023-01-09.log > 2023-01-09_1.log\n\n## 分隔符使用[]处理为 '[][]'\ntail -65000 2023-01-09_1.log |  awk -F'[][]' '/请求功能号为/{print $18\" \"$12\" \" $1}' | sort -n \n\n## 搜索过滤\ncat last05.log | awk -F'[: ]' '/结束,共花费时间/{print $8\" \"$13$14}'\n```\n\n##### 批量替换文件中内容\n```bash\nfind ./-type f -name application.yml -exec sed -i\"s/aaaaaa/bbbbbb/g\"{}\\; \n\nls | xargs sed -i\"2s/aa/bb/g\";\n```\n\nfind 命令, \n- -name 参数指定查找的文件名\n- -exec 参数将查找到的内容传递给下一个命令去继续执行相关逻辑\n \nsed 命令\n主要对文件内容进行替换，这里会将 application.yml 文件中的 aaaaaa 替换成 bbbbbb\n\n### 文件打包\n查找所有的txt文件，打包并拷贝\n```bash\n(find . -name \"*.txt\" | xargs tar -cvf test.tar) && cp -f test.tar ~\n```","slug":"Linux/Linux常用运维","published":1,"updated":"2023-12-29T05:18:43.313Z","_id":"clqq60vsp0006yoqa4lru0frp","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"磁盘管理\"><a href=\"#磁盘管理\" class=\"headerlink\" title=\"磁盘管理\"></a>磁盘管理</h3><h4 id=\"磁盘分区\"><a href=\"#磁盘分区\" class=\"headerlink\" title=\"磁盘分区\"></a>磁盘分区</h4><p>通用分区使用fdisk，如果需要分配超过1T的分区，使用parted。 </p>\n<h5 id=\"fidsk分区\"><a href=\"#fidsk分区\" class=\"headerlink\" title=\"fidsk分区\"></a>fidsk分区</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 操作磁盘</span></span><br><span class=\"line\">$ fdisk /dev/sdc</span><br><span class=\"line\">Welcome to fdisk (util-linux 2.30.1).</span><br><span class=\"line\">Changes will remain <span class=\"keyword\">in</span> memory only, <span class=\"keyword\">until</span> you decide to write them.</span><br><span class=\"line\">Be careful before using the write <span class=\"built_in\">command</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建分区</span></span><br><span class=\"line\">Command (m <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>): n</span><br><span class=\"line\">Partition <span class=\"built_in\">type</span></span><br><span class=\"line\">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class=\"line\">   e   extended (container <span class=\"keyword\">for</span> logical partitions)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分区类型：p 主分区；e 扩展分区</span></span><br><span class=\"line\">Select (default p): Enter</span><br><span class=\"line\">Using default response p.</span><br><span class=\"line\">Partition number (1-4, default 1): Enter</span><br><span class=\"line\">First sector (2048-20971519, default 2048): Enter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分区大小</span></span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-20971519, default 20971519): +1G</span><br><span class=\"line\">Created a new partition 1 of <span class=\"built_in\">type</span> <span class=\"string\">&#x27;Linux&#x27;</span> and of size 1 GiB.</span><br><span class=\"line\"></span><br><span class=\"line\">Command (m <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>): p</span><br><span class=\"line\">Disk /dev/sdc: 10 GiB, 10737418240 bytes, 20971520 sectors</span><br><span class=\"line\">Units: sectors of 1 * 512 = 512 bytes</span><br><span class=\"line\">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class=\"line\">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class=\"line\">Disklabel <span class=\"built_in\">type</span>: dos</span><br><span class=\"line\">Disk identifier: 0x8cc8f9e5</span><br><span class=\"line\">Device     Boot Start     End Sectors Size Id Type</span><br><span class=\"line\">/dev/sdc1        2048 2099199 2097152   1G 83 Linux</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存分区表</span></span><br><span class=\"line\">Command (m <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>): w</span><br><span class=\"line\">The partition table has been altered.</span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">Syncing disks.</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"parted分区\"><a href=\"#parted分区\" class=\"headerlink\" title=\"parted分区\"></a>parted分区</h5><p>超过1T的大空间分区，操作如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ parted /dev/sdb</span><br><span class=\"line\"># 对/dev/sdb进行分区或管理操作</span><br><span class=\"line\"> </span><br><span class=\"line\">GNU Parted 3.1</span><br><span class=\"line\">使用 /dev/sdb</span><br><span class=\"line\">Welcome to GNU Parted! Type &#x27;help&#x27; to view a list of commands.</span><br><span class=\"line\"> </span><br><span class=\"line\">(parted) mklabel gpt</span><br><span class=\"line\"># 定义分区表格式（常用的有msdos和gpt分区表格式，msdos不支持2TB以上容量的磁盘，所以大于2TB的磁盘选gpt分区表格式）</span><br><span class=\"line\"> </span><br><span class=\"line\">警告: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost. Do you want to continue?</span><br><span class=\"line\"># /dev/sdb上现有的磁盘标签将被销毁，该磁盘上的所有数据将丢失。你想要继续</span><br><span class=\"line\">是/Yes/否/No? yes                                                         </span><br><span class=\"line\"> </span><br><span class=\"line\">(parted) mkpart p1</span><br><span class=\"line\"># 创建第一个分区，名称为p1（p1只是第一个分区的名称，用别的名称也可以，如part1）</span><br><span class=\"line\"> </span><br><span class=\"line\">文件系统类型？  [ext2]? xfs        </span><br><span class=\"line\"># 定义分区格式（不支持ext4，想分ext4格式的分区，可以通过mkfs.ext4格式化成ext4格式）</span><br><span class=\"line\">                                       </span><br><span class=\"line\">起始点？ 1       </span><br><span class=\"line\"># 定义分区的起始位置（单位支持K,M,G,T）</span><br><span class=\"line\">                                                         </span><br><span class=\"line\">结束点？ 100%   </span><br><span class=\"line\"># 定义分区的结束位置（单位支持K,M,G,T）    </span><br><span class=\"line\">                                                      </span><br><span class=\"line\">(parted) print   # 查看当前分区情况</span><br><span class=\"line\">Model: VMware, VMware Virtual S (scsi)</span><br><span class=\"line\">Disk /dev/sdb: 107GB</span><br><span class=\"line\">Sector size (logical/physical): 512B/512B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags: </span><br><span class=\"line\"> </span><br><span class=\"line\">Number  Start   End    Size   File system  Name  标志</span><br><span class=\"line\"> 1      1049kB  107GB  107GB  xfs          p1</span><br></pre></td></tr></table></figure>\n\n<p>parted删除分析</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ parted /dev/sdb</span><br><span class=\"line\"># 对/dev/sdb进行分区或管理操作</span><br><span class=\"line\"> </span><br><span class=\"line\">(parted) rm                </span><br><span class=\"line\"># rm删除命令（删除之前必须确保分区没有被挂载）</span><br><span class=\"line\">                                               </span><br><span class=\"line\">分区编号？ 1          </span><br><span class=\"line\"># 删除第一个分区</span><br><span class=\"line\">                                                    </span><br><span class=\"line\">(parted) print   # 打印当前分区情况                                                         </span><br><span class=\"line\">Model: VMware, VMware Virtual S (scsi)</span><br><span class=\"line\">Disk /dev/sdb: 107GB</span><br><span class=\"line\">Sector size (logical/physical): 512B/512B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags: </span><br><span class=\"line\"> </span><br><span class=\"line\">Number  Start  End  Size  File system  Name  标志</span><br></pre></td></tr></table></figure>\n<h4 id=\"磁盘格式化\"><a href=\"#磁盘格式化\" class=\"headerlink\" title=\"磁盘格式化\"></a>磁盘格式化</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mkfs.ext4 /dev/sdc1</span><br><span class=\"line\">或</span><br><span class=\"line\">$ sudo mkfs -t ext4 /dev/sdc1</span><br><span class=\"line\">或</span><br><span class=\"line\">$ sudo mke2fs /dev/sdc1</span><br><span class=\"line\">mke2fs 1.43.5 (04-Aug-2017)</span><br><span class=\"line\">Creating filesystem with 262144 4k blocks and 65536 inodes</span><br><span class=\"line\">Filesystem UUID: c0a99b51-2b61-4f6a-b960-eb60915faab0</span><br><span class=\"line\">Superblock backups stored on blocks:</span><br><span class=\"line\">    32768, 98304, 163840, 229376</span><br><span class=\"line\">Allocating group tables: done</span><br><span class=\"line\">Writing inode tables: done</span><br><span class=\"line\">Creating journal (8192 blocks): done</span><br><span class=\"line\">Writing superblocks and filesystem accounting information: done</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Filesystem UUID: UUID 代表了通用且独一无二的识别符，UUID 在 Linux 中通常用来识别设备。它 128 位长的数字代表了 32 个十六进制数。</li>\n<li>Superblock: 超级块储存了文件系统的元数据。如果某个文件系统的超级块被破坏，我们就无法挂载它了（也就是说无法访问其中的文件了）。</li>\n<li>Inode: Inode 是类 Unix 系统中文件系统的数据结构，它储存了所有除名称以外的文件信息和数据。</li>\n<li>Journal: 日志式文件系统包含了用来修复电脑意外关机产生下错误信息的日志。</li>\n</ul>\n<h4 id=\"挂载分区\"><a href=\"#挂载分区\" class=\"headerlink\" title=\"挂载分区\"></a>挂载分区</h4><p>在创建完分区和文件系统之后，我们需要挂载它们以便使用。我们需要创建一个挂载点来挂载分区，使用 mkdir 来创建一个挂载点。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建挂载点</span></span><br><span class=\"line\">sudo <span class=\"built_in\">mkdir</span> -p /mnt/2g-new</span><br></pre></td></tr></table></figure>\n\n<p>进行临时挂载，请使用下面的命令。在计算机重启之后，你会丢失这个挂载点。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/sdc1 /mnt/2g-new</span><br></pre></td></tr></table></figure>\n\n<p>如果你希望永久挂载某个分区，请将分区详情加入 fstab 文件。我们既可以输入设备名称，也可以输入 UUID。 推荐使用设备名称挂载。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vi /etc/fstab</span></span><br><span class=\"line\">/dev/sdc1 /mnt/2g-new ext4 defaults 0 0</span><br></pre></td></tr></table></figure>\n\n<p>也可以使用 UUID 来进行永久挂载（请使用 blkid 来获取 UUID）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo blkid</span><br><span class=\"line\">/dev/sdc1: UUID=<span class=\"string\">&quot;d17e3c31-e2c9-4f11-809c-94a549bc43b7&quot;</span> TYPE=<span class=\"string\">&quot;ext2&quot;</span> PARTUUID=<span class=\"string\">&quot;8cc8f9e5-01&quot;</span></span><br><span class=\"line\">/dev/sda1: UUID=<span class=\"string\">&quot;d92fa769-e00f-4fd7-b6ed-ecf7224af7fa&quot;</span> TYPE=<span class=\"string\">&quot;ext4&quot;</span> PARTUUID=<span class=\"string\">&quot;eab59449-01&quot;</span></span><br><span class=\"line\">/dev/sdc3: UUID=<span class=\"string\">&quot;ca307aa4-0866-49b1-8184-004025789e63&quot;</span> TYPE=<span class=\"string\">&quot;ext4&quot;</span> PARTUUID=<span class=\"string\">&quot;8cc8f9e5-03&quot;</span></span><br><span class=\"line\">/dev/sdc5: PARTUUID=<span class=\"string\">&quot;8cc8f9e5-05&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># vi /etc/fstab</span></span><br><span class=\"line\">UUID=d17e3c31-e2c9-4f11-809c-94a549bc43b7 /mnt/2g-new ext4 defaults 0 0</span><br></pre></td></tr></table></figure>\n<h4 id=\"校验修改是否正常\"><a href=\"#校验修改是否正常\" class=\"headerlink\" title=\"校验修改是否正常\"></a>校验修改是否正常</h4><p>mount -a 命令无报错</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount -a</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看分区空间\"><a href=\"#查看分区空间\" class=\"headerlink\" title=\"查看分区空间\"></a>查看分区空间</h4><p>df 命令用于查看磁盘分区的空间及使用和剩余的空间信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认显示所有挂载的磁盘，默认以 KB 为单位。</span></span><br><span class=\"line\">[Linux]$  <span class=\"built_in\">df</span></span><br><span class=\"line\">文件系统          1K-块     已用     可用 已用% 挂载点</span><br><span class=\"line\">udev            3975328        0  3975328    0% /dev</span><br><span class=\"line\">tmpfs            799028     9516   789512    2% /run</span><br><span class=\"line\">/dev/mmcblk0p3 21977248 12651688  8186104   61% /</span><br><span class=\"line\">tmpfs           3995128   120492  3874636    4% /dev/shm</span><br><span class=\"line\">tmpfs              5120        4     5116    1% /run/lock</span><br><span class=\"line\">tmpfs           3995128        0  3995128    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/mmcblk0p4 95569324 10825896 79845740   12% /home/xiao/Videos/vlc</span><br><span class=\"line\">/dev/mmcblk0p1    94759     5199    89560    6% /boot/efi</span><br><span class=\"line\">tmpfs            799024       20   799004    1% /run/user/1000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以更可读的方式显示</span></span><br><span class=\"line\">[Linux]$  <span class=\"built_in\">df</span> -h</span><br><span class=\"line\">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">udev            3.8G     0  3.8G    0% /dev</span><br><span class=\"line\">tmpfs           781M  9.3M  772M    2% /run</span><br><span class=\"line\">/dev/mmcblk0p3   21G   13G  7.9G   61% /</span><br><span class=\"line\">tmpfs           3.9G  118M  3.7G    4% /dev/shm</span><br><span class=\"line\">tmpfs           5.0M  4.0K  5.0M    1% /run/lock</span><br><span class=\"line\">tmpfs           3.9G     0  3.9G    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/mmcblk0p4   92G   11G   77G   12% /home/xiao/Videos/vlc</span><br><span class=\"line\">/dev/mmcblk0p1   93M  5.1M   88M    6% /boot/efi</span><br><span class=\"line\">tmpfs           781M   20K  781M    1% /run/user/1000</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户管理\"><a href=\"#用户管理\" class=\"headerlink\" title=\"用户管理\"></a>用户管理</h3><h4 id=\"用户分组\"><a href=\"#用户分组\" class=\"headerlink\" title=\"用户分组\"></a>用户分组</h4><p>在ubuntu系统创建新用户群组ai-study。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ groupadd ai-study</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建用户并加入分组\"><a href=\"#创建用户并加入分组\" class=\"headerlink\" title=\"创建用户并加入分组\"></a>创建用户并加入分组</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#参数-m 自动创建用户的home目录</span></span><br><span class=\"line\">$ useradd -m user05  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建用户user05,账号家目录为/home/user05, 附加组为ai-study</span></span><br><span class=\"line\">$ useradd -d /home/user05 -G ai-study user05</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#为用户user05设置密码</span></span><br><span class=\"line\">$ passwd user05 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加普通用户user05到附加组ai-study</span></span><br><span class=\"line\">$ sudo usermod -a -G ai-study user01  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看用户分组信息</span></span><br><span class=\"line\">$ <span class=\"built_in\">id</span> user05</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看分组下的用户\"><a href=\"#查看分组下的用户\" class=\"headerlink\" title=\"查看分组下的用户\"></a>查看分组下的用户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### 查看ai-study用户组下的所有用户</span></span><br><span class=\"line\">grep <span class=\"string\">&#x27;ai-study&#x27;</span> /etc/group</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看root用户组下的所有用户</span></span><br><span class=\"line\">grep <span class=\"string\">&#x27;root&#x27;</span> /etc/group</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"分组内共享文件\"><a href=\"#分组内共享文件\" class=\"headerlink\" title=\"分组内共享文件\"></a>分组内共享文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建共享文件夹work-share</span></span><br><span class=\"line\">$ <span class=\"built_in\">mkdir</span> /data/work-share   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将work-share文件夹共享给ai-study 用户组</span></span><br><span class=\"line\">$ <span class=\"built_in\">chgrp</span> ai-study /data/work-share/</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"批量创建用户\"><a href=\"#批量创建用户\" class=\"headerlink\" title=\"批量创建用户\"></a>批量创建用户</h4><p>下列操作见目录《批量生成账号并修改目录》<br>user.txt</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user01</span><br><span class=\"line\">user02</span><br><span class=\"line\">user03</span><br></pre></td></tr></table></figure>\n\n<p>passwd.txt</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user01:123456</span><br><span class=\"line\">user02:123456</span><br><span class=\"line\">user03:123456</span><br></pre></td></tr></table></figure>\n\n<p>执行脚本:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> `<span class=\"built_in\">cat</span> user.txt`; <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"comment\">## 创建用户，并指定用户所在目录</span></span><br><span class=\"line\">  useradd -d /home/<span class=\"variable\">$user</span> -G ai-study <span class=\"variable\">$user</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;123456&quot;</span> | passwd --stdin <span class=\"variable\">$user</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;密码写入成功&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 修改密码</span></span><br><span class=\"line\">chpasswd &lt; passwd.txt</span><br><span class=\"line\">pwconv</span><br><span class=\"line\"><span class=\"built_in\">cat</span> passwd.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"远程登录\"><a href=\"#远程登录\" class=\"headerlink\" title=\"远程登录\"></a>远程登录</h3><h4 id=\"通过ssh登录主机\"><a href=\"#通过ssh登录主机\" class=\"headerlink\" title=\"通过ssh登录主机\"></a>通过ssh登录主机</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh user01@192.168.22.31</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"scp拷贝文件\"><a href=\"#scp拷贝文件\" class=\"headerlink\" title=\"scp拷贝文件\"></a>scp拷贝文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 将本机的text.zip文件，拷贝到远程主机的/home/user01/目录。</span></span><br><span class=\"line\">scp text.zip user01@192.168.22.31:/home/user01/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 将远程主机的/home/user01/test.zip文件，拷贝到本机的当前目录</span></span><br><span class=\"line\">scp user01@192.168.22.31:/home/user01/test.zip .</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看当前登录主机的用户\"><a href=\"#查看当前登录主机的用户\" class=\"headerlink\" title=\"查看当前登录主机的用户\"></a>查看当前登录主机的用户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出本机所有的 session</span></span><br><span class=\"line\"><span class=\"comment\"># 不带参数执行 loginctl 和执行 loginctl list-sessions 效果一样</span></span><br><span class=\"line\">[Linux]$ loginctl</span><br><span class=\"line\">SESSION  UID USER SEAT TTY</span><br><span class=\"line\">  1 1000 xiao      pts/0</span><br><span class=\"line\">  5 1000 xiao      pts/1</span><br><span class=\"line\"></span><br><span class=\"line\">2 sessions listed.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看 session 的详细信息</span></span><br><span class=\"line\">[Linux]$ loginctl show-session 5</span><br><span class=\"line\">EnableWallMessages=no</span><br><span class=\"line\">NAutoVTs=6</span><br><span class=\"line\">KillUserProcesses=no</span><br><span class=\"line\">RebootToFirmwareSetup=no</span><br><span class=\"line\">IdleSinceHint=1627474393034083</span><br><span class=\"line\">UserStopDelayUSec=10s</span><br><span class=\"line\">HandlePowerKey=poweroff</span><br><span class=\"line\">IdleAction=ignore</span><br><span class=\"line\">PreparingForShutdown=no</span><br><span class=\"line\">Docked=no</span><br><span class=\"line\">NCurrentSessions=2</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀死 session</span></span><br><span class=\"line\">[Linux]$ loginctl kill-session 976</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看登录用户的详细信息</span></span><br><span class=\"line\">[Linux]$ loginctl show-user 1000</span><br><span class=\"line\">UID=1000</span><br><span class=\"line\">GID=1000</span><br><span class=\"line\">Name=xiao</span><br><span class=\"line\">Timestamp=Wed 2021-07-28 18:53:32 CST</span><br><span class=\"line\">RuntimePath=/run/user/1000</span><br><span class=\"line\">Slice=user-1000.slice</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看登录用户的状态</span></span><br><span class=\"line\">[Linux]$ loginctl user-status xiao</span><br><span class=\"line\">xiao (1000)</span><br><span class=\"line\">           Since: Wed 2021-07-28 18:53:32 CST; 1h 25min ago</span><br><span class=\"line\">           State: active</span><br><span class=\"line\">        Sessions: 5 *1</span><br><span class=\"line\">          Linger: no</span><br><span class=\"line\">            Unit: user-1000.slice</span><br><span class=\"line\">                  ├─session-1.scope</span><br><span class=\"line\">                  │ ├─730 sshd: xiao [priv]</span><br><span class=\"line\">                  │ ├─747 sshd: xiao@pts/0</span><br><span class=\"line\">                  │ ├─748 -bash</span><br><span class=\"line\">                  │ └─851 vim 00_loginctl.rst</span><br><span class=\"line\">                  ├─session-5.scope</span><br><span class=\"line\">                  │ ├─852 sshd: xiao [priv]</span><br><span class=\"line\">                  │ ├─858 sshd: xiao@pts/1</span><br><span class=\"line\">                  │ ├─859 -bash</span><br><span class=\"line\">                  │ ├─862 su</span><br><span class=\"line\">                  │ ├─863 bash</span><br><span class=\"line\">                  │ ├─934 loginctl user-status xiao</span><br><span class=\"line\">                  │ └─935 pager</span><br><span class=\"line\">                  └─user@1000.service</span><br><span class=\"line\">                    └─init.scope</span><br><span class=\"line\">                      ├─733 /lib/systemd/systemd --user</span><br><span class=\"line\">                      └─734 (sd-pam)</span><br><span class=\"line\"></span><br><span class=\"line\">Jul 28 18:53:33 debian systemd[733]: Listening on GnuPG cryptographic agent and passphrase</span><br><span class=\"line\">Jul 28 18:53:33 debian systemd[733]: Listening on GnuPG cryptographic agent (ssh-agent emu</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络管理\"><a href=\"#网络管理\" class=\"headerlink\" title=\"网络管理\"></a>网络管理</h3><h4 id=\"Linux设置固定IP\"><a href=\"#Linux设置固定IP\" class=\"headerlink\" title=\"Linux设置固定IP\"></a>Linux设置固定IP</h4><ol>\n<li>进入到&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts </li>\n<li>编辑对应iface的文件，将BOOTPROTO&#x3D;dhcp的值改为static，并在最后面加上IP信息。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#BOOTPROTO=dhcp</span><br><span class=\"line\">BOOTPROTO=static </span><br><span class=\"line\"></span><br><span class=\"line\">IPADDR=192.168.8.101</span><br><span class=\"line\">NETMASK=255.255.255.0 </span><br><span class=\"line\">GATEWAY=192.168.8.1</span><br><span class=\"line\">DNS1=114.114.114.114</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"网络连接分析\"><a href=\"#网络连接分析\" class=\"headerlink\" title=\"网络连接分析\"></a>网络连接分析</h4><p>查看当前系统TCP连接状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -n | awk <span class=\"string\">&#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>netstat -n，这个命令负责查看主机上的所有 TCP、UDP 连接信息，i</li>\n<li>awk 命令则负责对这些信息进行进一步的处理，awk 后有一个用两个 “斜杠” 括起来的正则表达式，主要用来匹配以 tcp 开头的每一行信息，所以这里的正则表达式起到了一个过滤的作用（只分析tcp的连接），后面则是对信息过滤后进行具体的统计和输出</li>\n</ul>\n<h4 id=\"查看IP\"><a href=\"#查看IP\" class=\"headerlink\" title=\"查看IP\"></a>查看IP</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip a | grep global | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F/ <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"netcat连通性测试\"><a href=\"#netcat连通性测试\" class=\"headerlink\" title=\"netcat连通性测试\"></a>netcat连通性测试</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## TCP</span></span><br><span class=\"line\">nc -z -v 192.168.1.60 19000-19100 2&gt;&amp;1 | grep succeeded</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## UDP</span></span><br><span class=\"line\">nc -z -v -u 192.168.1.60 19000-19100 2&gt;&amp;1 | grep succeeded</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"修改swap交换分区\"><a href=\"#修改swap交换分区\" class=\"headerlink\" title=\"修改swap交换分区\"></a>修改swap交换分区</h3><p>Linux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。Android是基于Linux的操作系统，所以也可以使用Swap分区来提升系统运行效率。</p>\n<h4 id=\"查看swap状态\"><a href=\"#查看swap状态\" class=\"headerlink\" title=\"查看swap状态\"></a>查看swap状态</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">free -h</span><br><span class=\"line\">swapon -s</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### 生成文件</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/swap</span><br><span class=\"line\"><span class=\"built_in\">dd</span> <span class=\"keyword\">if</span>=/dev/zero of=/usr/swap/swapfile1 bs=1M count=2048</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 目标文件表示为swap分区文件</span></span><br><span class=\"line\">mkswap /usr/swap/swapfile1</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 600 /usr/swap/swapfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 激活swap文件</span></span><br><span class=\"line\">swapon /usr/swap/swapfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 自动挂载</span></span><br><span class=\"line\">vim /etc/fstab</span><br><span class=\"line\"><span class=\"comment\">##添加</span></span><br><span class=\"line\">/usr/swap/swapfile1 swap swap defaults 0 0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改swapiness设置swap使用时机\"><a href=\"#修改swapiness设置swap使用时机\" class=\"headerlink\" title=\"修改swapiness设置swap使用时机\"></a>修改swapiness设置swap使用时机</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /proc/sys/vm/swappiness</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 临时修改</span></span><br><span class=\"line\">sysctl vm.swappiness=60</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## sysctl.conf 持久化</span></span><br><span class=\"line\">vm.swappiness=60</span><br></pre></td></tr></table></figure>\n<ul>\n<li>0意味着“在任何情况下都不要发生交换”。</li>\n<li>swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。</li>\n</ul>\n<h4 id=\"关闭swap\"><a href=\"#关闭swap\" class=\"headerlink\" title=\"关闭swap\"></a>关闭swap</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 临时修改</span></span><br><span class=\"line\">swapoff</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除/etc/fsta添加的内容</span></span><br><span class=\"line\">```nux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。Android是基于Linux的操作系统，所以也可以使用Swap分区来提升系统运行效率。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 查看swap状态</span></span><br><span class=\"line\">```bash</span><br><span class=\"line\">free -h</span><br><span class=\"line\"></span><br><span class=\"line\">swapon -s</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### 生成文件</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/swap</span><br><span class=\"line\"><span class=\"built_in\">dd</span> <span class=\"keyword\">if</span>=/dev/zero of=/usr/swap/swapfile1 bs=1M count=2048</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 目标文件表示为swap分区文件</span></span><br><span class=\"line\">mkswap /usr/swap/swapfile1</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 600 /usr/swap/swapfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 激活swap文件</span></span><br><span class=\"line\">swapon /usr/swap/swapfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 自动挂载</span></span><br><span class=\"line\">vim /etc/fstab</span><br><span class=\"line\"><span class=\"comment\">##添加</span></span><br><span class=\"line\">/usr/swap/swapfile1 swap swap defaults 0 0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改swapiness设置swap使用时机-1\"><a href=\"#修改swapiness设置swap使用时机-1\" class=\"headerlink\" title=\"修改swapiness设置swap使用时机\"></a>修改swapiness设置swap使用时机</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /proc/sys/vm/swappiness</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 临时修改</span></span><br><span class=\"line\">sysctl vm.swappiness=60</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## sysctl.conf 持久化</span></span><br><span class=\"line\">vm.swappiness=60</span><br></pre></td></tr></table></figure>\n<ul>\n<li>0意味着“在任何情况下都不要发生交换”。</li>\n<li>swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。</li>\n</ul>\n<h4 id=\"关闭swap-1\"><a href=\"#关闭swap-1\" class=\"headerlink\" title=\"关闭swap\"></a>关闭swap</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 临时修改</span></span><br><span class=\"line\">swapoff</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除/etc/fsta添加的内容</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"常用脚本\"><a href=\"#常用脚本\" class=\"headerlink\" title=\"常用脚本\"></a>常用脚本</h3><h4 id=\"操作快捷键\"><a href=\"#操作快捷键\" class=\"headerlink\" title=\"操作快捷键\"></a>操作快捷键</h4><ul>\n<li>Ctrl + r：可以快速查找历史命令；</li>\n<li>Ctrl + l：可以清理控制台屏幕；</li>\n<li>Ctrl + a \\ Ctrl + e：移动光标到命令行首\\行尾；</li>\n<li>Ctrl + w \\ Ctrl + k：删除光标之前\\之后的内容。</li>\n<li>Ctrl + c：强制终止程序的执行；</li>\n<li>Ctrl + z：挂起一个进程；</li>\n<li>Ctrl + d：终端中输入 exit 后回车。</li>\n</ul>\n<h4 id=\"磁盘空间分析\"><a href=\"#磁盘空间分析\" class=\"headerlink\" title=\"磁盘空间分析\"></a>磁盘空间分析</h4><h5 id=\"查看系统最大文件\"><a href=\"#查看系统最大文件\" class=\"headerlink\" title=\"查看系统最大文件\"></a>查看系统最大文件</h5><p>当磁盘空间不足，需要快速定位或者对文件使用率进行排序，需要查看哪一些文件目录或者文件占用的空间比较多，就需要如下组合命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">du</span> -x --max-depth=1 / | <span class=\"built_in\">sort</span> -k1 -nr</span><br></pre></td></tr></table></figure>\n\n<p>du命令</p>\n<ul>\n<li>-x 参数表示跳过其他文件系统，也就是只分析本文件系统里的文件，它可以帮助我们排除一些非本文件系统的统计信息，这样执行速度会更快也不容易出现一些额外的干扰项。</li>\n<li>–max-depth 参数设置为 1，这样就可以统计出根目录下第一级目录中的所有文件的大小。</li>\n</ul>\n<p>sort命令</p>\n<ul>\n<li>-k 参数指明具体按照哪一列进行排序</li>\n<li>-n 参数表示只对数值进行排序，</li>\n<li>-r 参数表示反向排序</li>\n</ul>\n<h5 id=\"查找目录下文件数量\"><a href=\"#查找目录下文件数量\" class=\"headerlink\" title=\"查找目录下文件数量\"></a>查找目录下文件数量</h5><p>适用于系统上产生很多碎片文件时，随之产生大量的 Inode ， Inode 用于存放着文件系统中文件的源数据，Inode过渡的使用会导致系统 Inode 资源不足。这种情况是不正常的，这个时候分析如果通过du 命令指能具体展示出磁盘空间的使用情况，但并不能分析出具体目录下产生了多少碎片文件，我们就需要如下的命令组合来对文件进行统计分析。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -<span class=\"built_in\">type</span> f | awk -F / -v OFS=/ <span class=\"string\">&#x27;&#123;$NF=&quot;&quot;;dir[$0]++&#125;END&#123;for(i in dir)print dir[i]&quot; &quot;i&#125;&#x27;</span> | <span class=\"built_in\">sort</span> -k1 -nr | <span class=\"built_in\">head</span></span><br></pre></td></tr></table></figure>\n\n<p>find命令</p>\n<ul>\n<li>-type f 查找指定文件类型</li>\n</ul>\n<p>awk命令</p>\n<ul>\n<li>-F &#x2F; 指定处理文件时字符串之间以&#x2F;分割</li>\n<li>-v OFS&#x3D;&#x2F; 显示结果时以&#x2F;分割展示</li>\n<li>awk的{} END {}格式， 前面{}表示行处理操作，END{}表示行处理后需要进行增提输出。</li>\n<li>$NF设置为空，表示将每一行的文件名信息去除，从而保留文件路径</li>\n<li>dir 是一个自增数组，用于统计结果</li>\n</ul>\n<h4 id=\"批量文件修改\"><a href=\"#批量文件修改\" class=\"headerlink\" title=\"批量文件修改\"></a>批量文件修改</h4><h4 id=\"批量文件改名\"><a href=\"#批量文件改名\" class=\"headerlink\" title=\"批量文件改名\"></a>批量文件改名</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rename .yml _pre.yml *</span><br></pre></td></tr></table></figure>\n<h4 id=\"awk-文档处理\"><a href=\"#awk-文档处理\" class=\"headerlink\" title=\"awk 文档处理\"></a>awk 文档处理</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 排序</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> fund_cust.txt | <span class=\"built_in\">sort</span> &gt; fund_cust_sort.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 取奇数行</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> fund_cust_sort.txt | awk <span class=\"string\">&#x27;&#123;if (NR%2==1) print $0&#125;&#x27;</span> &gt; fund_cust_sort_1.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 取偶数行</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> fund_cust_sort.txt | awk <span class=\"string\">&#x27;&#123;if (NR%2==0) print $0&#125;&#x27;</span> &gt; fund_cust_sort_2.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 合并</span></span><br><span class=\"line\"><span class=\"comment\"># NR：awk 处理的当前的行数，从1开始，直到所有文件处理完</span></span><br><span class=\"line\"><span class=\"comment\"># FNR：awk 处理的当前行在当前文件中所在的行数，从1开始，直到当前这个文件处理完，且在下一个文件会重新计数</span></span><br><span class=\"line\"><span class=\"comment\"># NR==FNR：表示当在处理第一个文件时</span></span><br><span class=\"line\"><span class=\"comment\"># a[NR]=$0：表示建立一个数组a，每行的行号和改行的内容形成一一对应的关系</span></span><br><span class=\"line\"><span class=\"comment\"># nr=NR：这里用nr这个变量记录第一个文件的行数；每处理一行nr被刷新一次，直到第一个文件结尾，最后nr就是第一个文件的行数！</span></span><br><span class=\"line\"><span class=\"comment\"># NR&gt;FNR：表示处理第二个文件时</span></span><br><span class=\"line\"><span class=\"comment\"># a[NR-nr]：表示第一个文件的内容</span></span><br><span class=\"line\"><span class=\"comment\"># $0：表示第二个文件的每行的所有内容</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;NR==FNR&#123;a[NR]=$1&quot;,&quot;$2&quot;,&quot;$3;nr=NR;&#125; NR&gt;FNR&#123;print a[NR-nr]&quot;,&quot;$3&quot;,&quot;$1&#125;&#x27;</span> fund_cust_sort_1.txt fund_cust_sort_2.txt &gt; fund_cust.csv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##gbk 转化为utf8</span></span><br><span class=\"line\">iconv -f gbk -t utf-8 2023-01-09.<span class=\"built_in\">log</span> &gt; 2023-01-09_1.<span class=\"built_in\">log</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 分隔符使用[]处理为 &#x27;[][]&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">tail</span> -65000 2023-01-09_1.<span class=\"built_in\">log</span> |  awk -F<span class=\"string\">&#x27;[][]&#x27;</span> <span class=\"string\">&#x27;/请求功能号为/&#123;print $18&quot; &quot;$12&quot; &quot; $1&#125;&#x27;</span> | <span class=\"built_in\">sort</span> -n </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 搜索过滤</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> last05.log | awk -F<span class=\"string\">&#x27;[: ]&#x27;</span> <span class=\"string\">&#x27;/结束,共花费时间/&#123;print $8&quot; &quot;$13$14&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"批量替换文件中内容\"><a href=\"#批量替换文件中内容\" class=\"headerlink\" title=\"批量替换文件中内容\"></a>批量替换文件中内容</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find ./-type f -name application.yml -<span class=\"built_in\">exec</span> sed -i<span class=\"string\">&quot;s/aaaaaa/bbbbbb/g&quot;</span>&#123;&#125;\\; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ls</span> | xargs sed -i<span class=\"string\">&quot;2s/aa/bb/g&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>find 命令, </p>\n<ul>\n<li>-name 参数指定查找的文件名</li>\n<li>-exec 参数将查找到的内容传递给下一个命令去继续执行相关逻辑</li>\n</ul>\n<p>sed 命令<br>主要对文件内容进行替换，这里会将 application.yml 文件中的 aaaaaa 替换成 bbbbbb</p>\n<h3 id=\"文件打包\"><a href=\"#文件打包\" class=\"headerlink\" title=\"文件打包\"></a>文件打包</h3><p>查找所有的txt文件，打包并拷贝</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(find . -name <span class=\"string\">&quot;*.txt&quot;</span> | xargs tar -cvf test.tar) &amp;&amp; <span class=\"built_in\">cp</span> -f test.tar ~</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"磁盘管理\"><a href=\"#磁盘管理\" class=\"headerlink\" title=\"磁盘管理\"></a>磁盘管理</h3><h4 id=\"磁盘分区\"><a href=\"#磁盘分区\" class=\"headerlink\" title=\"磁盘分区\"></a>磁盘分区</h4><p>通用分区使用fdisk，如果需要分配超过1T的分区，使用parted。 </p>\n<h5 id=\"fidsk分区\"><a href=\"#fidsk分区\" class=\"headerlink\" title=\"fidsk分区\"></a>fidsk分区</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 操作磁盘</span></span><br><span class=\"line\">$ fdisk /dev/sdc</span><br><span class=\"line\">Welcome to fdisk (util-linux 2.30.1).</span><br><span class=\"line\">Changes will remain <span class=\"keyword\">in</span> memory only, <span class=\"keyword\">until</span> you decide to write them.</span><br><span class=\"line\">Be careful before using the write <span class=\"built_in\">command</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建分区</span></span><br><span class=\"line\">Command (m <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>): n</span><br><span class=\"line\">Partition <span class=\"built_in\">type</span></span><br><span class=\"line\">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class=\"line\">   e   extended (container <span class=\"keyword\">for</span> logical partitions)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分区类型：p 主分区；e 扩展分区</span></span><br><span class=\"line\">Select (default p): Enter</span><br><span class=\"line\">Using default response p.</span><br><span class=\"line\">Partition number (1-4, default 1): Enter</span><br><span class=\"line\">First sector (2048-20971519, default 2048): Enter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分区大小</span></span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-20971519, default 20971519): +1G</span><br><span class=\"line\">Created a new partition 1 of <span class=\"built_in\">type</span> <span class=\"string\">&#x27;Linux&#x27;</span> and of size 1 GiB.</span><br><span class=\"line\"></span><br><span class=\"line\">Command (m <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>): p</span><br><span class=\"line\">Disk /dev/sdc: 10 GiB, 10737418240 bytes, 20971520 sectors</span><br><span class=\"line\">Units: sectors of 1 * 512 = 512 bytes</span><br><span class=\"line\">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class=\"line\">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class=\"line\">Disklabel <span class=\"built_in\">type</span>: dos</span><br><span class=\"line\">Disk identifier: 0x8cc8f9e5</span><br><span class=\"line\">Device     Boot Start     End Sectors Size Id Type</span><br><span class=\"line\">/dev/sdc1        2048 2099199 2097152   1G 83 Linux</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存分区表</span></span><br><span class=\"line\">Command (m <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>): w</span><br><span class=\"line\">The partition table has been altered.</span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">Syncing disks.</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"parted分区\"><a href=\"#parted分区\" class=\"headerlink\" title=\"parted分区\"></a>parted分区</h5><p>超过1T的大空间分区，操作如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ parted /dev/sdb</span><br><span class=\"line\"># 对/dev/sdb进行分区或管理操作</span><br><span class=\"line\"> </span><br><span class=\"line\">GNU Parted 3.1</span><br><span class=\"line\">使用 /dev/sdb</span><br><span class=\"line\">Welcome to GNU Parted! Type &#x27;help&#x27; to view a list of commands.</span><br><span class=\"line\"> </span><br><span class=\"line\">(parted) mklabel gpt</span><br><span class=\"line\"># 定义分区表格式（常用的有msdos和gpt分区表格式，msdos不支持2TB以上容量的磁盘，所以大于2TB的磁盘选gpt分区表格式）</span><br><span class=\"line\"> </span><br><span class=\"line\">警告: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost. Do you want to continue?</span><br><span class=\"line\"># /dev/sdb上现有的磁盘标签将被销毁，该磁盘上的所有数据将丢失。你想要继续</span><br><span class=\"line\">是/Yes/否/No? yes                                                         </span><br><span class=\"line\"> </span><br><span class=\"line\">(parted) mkpart p1</span><br><span class=\"line\"># 创建第一个分区，名称为p1（p1只是第一个分区的名称，用别的名称也可以，如part1）</span><br><span class=\"line\"> </span><br><span class=\"line\">文件系统类型？  [ext2]? xfs        </span><br><span class=\"line\"># 定义分区格式（不支持ext4，想分ext4格式的分区，可以通过mkfs.ext4格式化成ext4格式）</span><br><span class=\"line\">                                       </span><br><span class=\"line\">起始点？ 1       </span><br><span class=\"line\"># 定义分区的起始位置（单位支持K,M,G,T）</span><br><span class=\"line\">                                                         </span><br><span class=\"line\">结束点？ 100%   </span><br><span class=\"line\"># 定义分区的结束位置（单位支持K,M,G,T）    </span><br><span class=\"line\">                                                      </span><br><span class=\"line\">(parted) print   # 查看当前分区情况</span><br><span class=\"line\">Model: VMware, VMware Virtual S (scsi)</span><br><span class=\"line\">Disk /dev/sdb: 107GB</span><br><span class=\"line\">Sector size (logical/physical): 512B/512B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags: </span><br><span class=\"line\"> </span><br><span class=\"line\">Number  Start   End    Size   File system  Name  标志</span><br><span class=\"line\"> 1      1049kB  107GB  107GB  xfs          p1</span><br></pre></td></tr></table></figure>\n\n<p>parted删除分析</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ parted /dev/sdb</span><br><span class=\"line\"># 对/dev/sdb进行分区或管理操作</span><br><span class=\"line\"> </span><br><span class=\"line\">(parted) rm                </span><br><span class=\"line\"># rm删除命令（删除之前必须确保分区没有被挂载）</span><br><span class=\"line\">                                               </span><br><span class=\"line\">分区编号？ 1          </span><br><span class=\"line\"># 删除第一个分区</span><br><span class=\"line\">                                                    </span><br><span class=\"line\">(parted) print   # 打印当前分区情况                                                         </span><br><span class=\"line\">Model: VMware, VMware Virtual S (scsi)</span><br><span class=\"line\">Disk /dev/sdb: 107GB</span><br><span class=\"line\">Sector size (logical/physical): 512B/512B</span><br><span class=\"line\">Partition Table: gpt</span><br><span class=\"line\">Disk Flags: </span><br><span class=\"line\"> </span><br><span class=\"line\">Number  Start  End  Size  File system  Name  标志</span><br></pre></td></tr></table></figure>\n<h4 id=\"磁盘格式化\"><a href=\"#磁盘格式化\" class=\"headerlink\" title=\"磁盘格式化\"></a>磁盘格式化</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mkfs.ext4 /dev/sdc1</span><br><span class=\"line\">或</span><br><span class=\"line\">$ sudo mkfs -t ext4 /dev/sdc1</span><br><span class=\"line\">或</span><br><span class=\"line\">$ sudo mke2fs /dev/sdc1</span><br><span class=\"line\">mke2fs 1.43.5 (04-Aug-2017)</span><br><span class=\"line\">Creating filesystem with 262144 4k blocks and 65536 inodes</span><br><span class=\"line\">Filesystem UUID: c0a99b51-2b61-4f6a-b960-eb60915faab0</span><br><span class=\"line\">Superblock backups stored on blocks:</span><br><span class=\"line\">    32768, 98304, 163840, 229376</span><br><span class=\"line\">Allocating group tables: done</span><br><span class=\"line\">Writing inode tables: done</span><br><span class=\"line\">Creating journal (8192 blocks): done</span><br><span class=\"line\">Writing superblocks and filesystem accounting information: done</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Filesystem UUID: UUID 代表了通用且独一无二的识别符，UUID 在 Linux 中通常用来识别设备。它 128 位长的数字代表了 32 个十六进制数。</li>\n<li>Superblock: 超级块储存了文件系统的元数据。如果某个文件系统的超级块被破坏，我们就无法挂载它了（也就是说无法访问其中的文件了）。</li>\n<li>Inode: Inode 是类 Unix 系统中文件系统的数据结构，它储存了所有除名称以外的文件信息和数据。</li>\n<li>Journal: 日志式文件系统包含了用来修复电脑意外关机产生下错误信息的日志。</li>\n</ul>\n<h4 id=\"挂载分区\"><a href=\"#挂载分区\" class=\"headerlink\" title=\"挂载分区\"></a>挂载分区</h4><p>在创建完分区和文件系统之后，我们需要挂载它们以便使用。我们需要创建一个挂载点来挂载分区，使用 mkdir 来创建一个挂载点。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建挂载点</span></span><br><span class=\"line\">sudo <span class=\"built_in\">mkdir</span> -p /mnt/2g-new</span><br></pre></td></tr></table></figure>\n\n<p>进行临时挂载，请使用下面的命令。在计算机重启之后，你会丢失这个挂载点。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/sdc1 /mnt/2g-new</span><br></pre></td></tr></table></figure>\n\n<p>如果你希望永久挂载某个分区，请将分区详情加入 fstab 文件。我们既可以输入设备名称，也可以输入 UUID。 推荐使用设备名称挂载。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vi /etc/fstab</span></span><br><span class=\"line\">/dev/sdc1 /mnt/2g-new ext4 defaults 0 0</span><br></pre></td></tr></table></figure>\n\n<p>也可以使用 UUID 来进行永久挂载（请使用 blkid 来获取 UUID）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo blkid</span><br><span class=\"line\">/dev/sdc1: UUID=<span class=\"string\">&quot;d17e3c31-e2c9-4f11-809c-94a549bc43b7&quot;</span> TYPE=<span class=\"string\">&quot;ext2&quot;</span> PARTUUID=<span class=\"string\">&quot;8cc8f9e5-01&quot;</span></span><br><span class=\"line\">/dev/sda1: UUID=<span class=\"string\">&quot;d92fa769-e00f-4fd7-b6ed-ecf7224af7fa&quot;</span> TYPE=<span class=\"string\">&quot;ext4&quot;</span> PARTUUID=<span class=\"string\">&quot;eab59449-01&quot;</span></span><br><span class=\"line\">/dev/sdc3: UUID=<span class=\"string\">&quot;ca307aa4-0866-49b1-8184-004025789e63&quot;</span> TYPE=<span class=\"string\">&quot;ext4&quot;</span> PARTUUID=<span class=\"string\">&quot;8cc8f9e5-03&quot;</span></span><br><span class=\"line\">/dev/sdc5: PARTUUID=<span class=\"string\">&quot;8cc8f9e5-05&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># vi /etc/fstab</span></span><br><span class=\"line\">UUID=d17e3c31-e2c9-4f11-809c-94a549bc43b7 /mnt/2g-new ext4 defaults 0 0</span><br></pre></td></tr></table></figure>\n<h4 id=\"校验修改是否正常\"><a href=\"#校验修改是否正常\" class=\"headerlink\" title=\"校验修改是否正常\"></a>校验修改是否正常</h4><p>mount -a 命令无报错</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount -a</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看分区空间\"><a href=\"#查看分区空间\" class=\"headerlink\" title=\"查看分区空间\"></a>查看分区空间</h4><p>df 命令用于查看磁盘分区的空间及使用和剩余的空间信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认显示所有挂载的磁盘，默认以 KB 为单位。</span></span><br><span class=\"line\">[Linux]$  <span class=\"built_in\">df</span></span><br><span class=\"line\">文件系统          1K-块     已用     可用 已用% 挂载点</span><br><span class=\"line\">udev            3975328        0  3975328    0% /dev</span><br><span class=\"line\">tmpfs            799028     9516   789512    2% /run</span><br><span class=\"line\">/dev/mmcblk0p3 21977248 12651688  8186104   61% /</span><br><span class=\"line\">tmpfs           3995128   120492  3874636    4% /dev/shm</span><br><span class=\"line\">tmpfs              5120        4     5116    1% /run/lock</span><br><span class=\"line\">tmpfs           3995128        0  3995128    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/mmcblk0p4 95569324 10825896 79845740   12% /home/xiao/Videos/vlc</span><br><span class=\"line\">/dev/mmcblk0p1    94759     5199    89560    6% /boot/efi</span><br><span class=\"line\">tmpfs            799024       20   799004    1% /run/user/1000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以更可读的方式显示</span></span><br><span class=\"line\">[Linux]$  <span class=\"built_in\">df</span> -h</span><br><span class=\"line\">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">udev            3.8G     0  3.8G    0% /dev</span><br><span class=\"line\">tmpfs           781M  9.3M  772M    2% /run</span><br><span class=\"line\">/dev/mmcblk0p3   21G   13G  7.9G   61% /</span><br><span class=\"line\">tmpfs           3.9G  118M  3.7G    4% /dev/shm</span><br><span class=\"line\">tmpfs           5.0M  4.0K  5.0M    1% /run/lock</span><br><span class=\"line\">tmpfs           3.9G     0  3.9G    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/mmcblk0p4   92G   11G   77G   12% /home/xiao/Videos/vlc</span><br><span class=\"line\">/dev/mmcblk0p1   93M  5.1M   88M    6% /boot/efi</span><br><span class=\"line\">tmpfs           781M   20K  781M    1% /run/user/1000</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户管理\"><a href=\"#用户管理\" class=\"headerlink\" title=\"用户管理\"></a>用户管理</h3><h4 id=\"用户分组\"><a href=\"#用户分组\" class=\"headerlink\" title=\"用户分组\"></a>用户分组</h4><p>在ubuntu系统创建新用户群组ai-study。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ groupadd ai-study</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建用户并加入分组\"><a href=\"#创建用户并加入分组\" class=\"headerlink\" title=\"创建用户并加入分组\"></a>创建用户并加入分组</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#参数-m 自动创建用户的home目录</span></span><br><span class=\"line\">$ useradd -m user05  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建用户user05,账号家目录为/home/user05, 附加组为ai-study</span></span><br><span class=\"line\">$ useradd -d /home/user05 -G ai-study user05</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#为用户user05设置密码</span></span><br><span class=\"line\">$ passwd user05 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加普通用户user05到附加组ai-study</span></span><br><span class=\"line\">$ sudo usermod -a -G ai-study user01  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看用户分组信息</span></span><br><span class=\"line\">$ <span class=\"built_in\">id</span> user05</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看分组下的用户\"><a href=\"#查看分组下的用户\" class=\"headerlink\" title=\"查看分组下的用户\"></a>查看分组下的用户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### 查看ai-study用户组下的所有用户</span></span><br><span class=\"line\">grep <span class=\"string\">&#x27;ai-study&#x27;</span> /etc/group</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看root用户组下的所有用户</span></span><br><span class=\"line\">grep <span class=\"string\">&#x27;root&#x27;</span> /etc/group</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"分组内共享文件\"><a href=\"#分组内共享文件\" class=\"headerlink\" title=\"分组内共享文件\"></a>分组内共享文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建共享文件夹work-share</span></span><br><span class=\"line\">$ <span class=\"built_in\">mkdir</span> /data/work-share   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将work-share文件夹共享给ai-study 用户组</span></span><br><span class=\"line\">$ <span class=\"built_in\">chgrp</span> ai-study /data/work-share/</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"批量创建用户\"><a href=\"#批量创建用户\" class=\"headerlink\" title=\"批量创建用户\"></a>批量创建用户</h4><p>下列操作见目录《批量生成账号并修改目录》<br>user.txt</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user01</span><br><span class=\"line\">user02</span><br><span class=\"line\">user03</span><br></pre></td></tr></table></figure>\n\n<p>passwd.txt</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user01:123456</span><br><span class=\"line\">user02:123456</span><br><span class=\"line\">user03:123456</span><br></pre></td></tr></table></figure>\n\n<p>执行脚本:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> `<span class=\"built_in\">cat</span> user.txt`; <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"comment\">## 创建用户，并指定用户所在目录</span></span><br><span class=\"line\">  useradd -d /home/<span class=\"variable\">$user</span> -G ai-study <span class=\"variable\">$user</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;123456&quot;</span> | passwd --stdin <span class=\"variable\">$user</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;密码写入成功&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 修改密码</span></span><br><span class=\"line\">chpasswd &lt; passwd.txt</span><br><span class=\"line\">pwconv</span><br><span class=\"line\"><span class=\"built_in\">cat</span> passwd.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"远程登录\"><a href=\"#远程登录\" class=\"headerlink\" title=\"远程登录\"></a>远程登录</h3><h4 id=\"通过ssh登录主机\"><a href=\"#通过ssh登录主机\" class=\"headerlink\" title=\"通过ssh登录主机\"></a>通过ssh登录主机</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh user01@192.168.22.31</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"scp拷贝文件\"><a href=\"#scp拷贝文件\" class=\"headerlink\" title=\"scp拷贝文件\"></a>scp拷贝文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 将本机的text.zip文件，拷贝到远程主机的/home/user01/目录。</span></span><br><span class=\"line\">scp text.zip user01@192.168.22.31:/home/user01/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 将远程主机的/home/user01/test.zip文件，拷贝到本机的当前目录</span></span><br><span class=\"line\">scp user01@192.168.22.31:/home/user01/test.zip .</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看当前登录主机的用户\"><a href=\"#查看当前登录主机的用户\" class=\"headerlink\" title=\"查看当前登录主机的用户\"></a>查看当前登录主机的用户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出本机所有的 session</span></span><br><span class=\"line\"><span class=\"comment\"># 不带参数执行 loginctl 和执行 loginctl list-sessions 效果一样</span></span><br><span class=\"line\">[Linux]$ loginctl</span><br><span class=\"line\">SESSION  UID USER SEAT TTY</span><br><span class=\"line\">  1 1000 xiao      pts/0</span><br><span class=\"line\">  5 1000 xiao      pts/1</span><br><span class=\"line\"></span><br><span class=\"line\">2 sessions listed.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看 session 的详细信息</span></span><br><span class=\"line\">[Linux]$ loginctl show-session 5</span><br><span class=\"line\">EnableWallMessages=no</span><br><span class=\"line\">NAutoVTs=6</span><br><span class=\"line\">KillUserProcesses=no</span><br><span class=\"line\">RebootToFirmwareSetup=no</span><br><span class=\"line\">IdleSinceHint=1627474393034083</span><br><span class=\"line\">UserStopDelayUSec=10s</span><br><span class=\"line\">HandlePowerKey=poweroff</span><br><span class=\"line\">IdleAction=ignore</span><br><span class=\"line\">PreparingForShutdown=no</span><br><span class=\"line\">Docked=no</span><br><span class=\"line\">NCurrentSessions=2</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀死 session</span></span><br><span class=\"line\">[Linux]$ loginctl kill-session 976</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看登录用户的详细信息</span></span><br><span class=\"line\">[Linux]$ loginctl show-user 1000</span><br><span class=\"line\">UID=1000</span><br><span class=\"line\">GID=1000</span><br><span class=\"line\">Name=xiao</span><br><span class=\"line\">Timestamp=Wed 2021-07-28 18:53:32 CST</span><br><span class=\"line\">RuntimePath=/run/user/1000</span><br><span class=\"line\">Slice=user-1000.slice</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看登录用户的状态</span></span><br><span class=\"line\">[Linux]$ loginctl user-status xiao</span><br><span class=\"line\">xiao (1000)</span><br><span class=\"line\">           Since: Wed 2021-07-28 18:53:32 CST; 1h 25min ago</span><br><span class=\"line\">           State: active</span><br><span class=\"line\">        Sessions: 5 *1</span><br><span class=\"line\">          Linger: no</span><br><span class=\"line\">            Unit: user-1000.slice</span><br><span class=\"line\">                  ├─session-1.scope</span><br><span class=\"line\">                  │ ├─730 sshd: xiao [priv]</span><br><span class=\"line\">                  │ ├─747 sshd: xiao@pts/0</span><br><span class=\"line\">                  │ ├─748 -bash</span><br><span class=\"line\">                  │ └─851 vim 00_loginctl.rst</span><br><span class=\"line\">                  ├─session-5.scope</span><br><span class=\"line\">                  │ ├─852 sshd: xiao [priv]</span><br><span class=\"line\">                  │ ├─858 sshd: xiao@pts/1</span><br><span class=\"line\">                  │ ├─859 -bash</span><br><span class=\"line\">                  │ ├─862 su</span><br><span class=\"line\">                  │ ├─863 bash</span><br><span class=\"line\">                  │ ├─934 loginctl user-status xiao</span><br><span class=\"line\">                  │ └─935 pager</span><br><span class=\"line\">                  └─user@1000.service</span><br><span class=\"line\">                    └─init.scope</span><br><span class=\"line\">                      ├─733 /lib/systemd/systemd --user</span><br><span class=\"line\">                      └─734 (sd-pam)</span><br><span class=\"line\"></span><br><span class=\"line\">Jul 28 18:53:33 debian systemd[733]: Listening on GnuPG cryptographic agent and passphrase</span><br><span class=\"line\">Jul 28 18:53:33 debian systemd[733]: Listening on GnuPG cryptographic agent (ssh-agent emu</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络管理\"><a href=\"#网络管理\" class=\"headerlink\" title=\"网络管理\"></a>网络管理</h3><h4 id=\"Linux设置固定IP\"><a href=\"#Linux设置固定IP\" class=\"headerlink\" title=\"Linux设置固定IP\"></a>Linux设置固定IP</h4><ol>\n<li>进入到&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts </li>\n<li>编辑对应iface的文件，将BOOTPROTO&#x3D;dhcp的值改为static，并在最后面加上IP信息。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#BOOTPROTO=dhcp</span><br><span class=\"line\">BOOTPROTO=static </span><br><span class=\"line\"></span><br><span class=\"line\">IPADDR=192.168.8.101</span><br><span class=\"line\">NETMASK=255.255.255.0 </span><br><span class=\"line\">GATEWAY=192.168.8.1</span><br><span class=\"line\">DNS1=114.114.114.114</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"网络连接分析\"><a href=\"#网络连接分析\" class=\"headerlink\" title=\"网络连接分析\"></a>网络连接分析</h4><p>查看当前系统TCP连接状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -n | awk <span class=\"string\">&#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>netstat -n，这个命令负责查看主机上的所有 TCP、UDP 连接信息，i</li>\n<li>awk 命令则负责对这些信息进行进一步的处理，awk 后有一个用两个 “斜杠” 括起来的正则表达式，主要用来匹配以 tcp 开头的每一行信息，所以这里的正则表达式起到了一个过滤的作用（只分析tcp的连接），后面则是对信息过滤后进行具体的统计和输出</li>\n</ul>\n<h4 id=\"查看IP\"><a href=\"#查看IP\" class=\"headerlink\" title=\"查看IP\"></a>查看IP</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip a | grep global | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F/ <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"netcat连通性测试\"><a href=\"#netcat连通性测试\" class=\"headerlink\" title=\"netcat连通性测试\"></a>netcat连通性测试</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## TCP</span></span><br><span class=\"line\">nc -z -v 192.168.1.60 19000-19100 2&gt;&amp;1 | grep succeeded</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## UDP</span></span><br><span class=\"line\">nc -z -v -u 192.168.1.60 19000-19100 2&gt;&amp;1 | grep succeeded</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"修改swap交换分区\"><a href=\"#修改swap交换分区\" class=\"headerlink\" title=\"修改swap交换分区\"></a>修改swap交换分区</h3><p>Linux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。Android是基于Linux的操作系统，所以也可以使用Swap分区来提升系统运行效率。</p>\n<h4 id=\"查看swap状态\"><a href=\"#查看swap状态\" class=\"headerlink\" title=\"查看swap状态\"></a>查看swap状态</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">free -h</span><br><span class=\"line\">swapon -s</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### 生成文件</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/swap</span><br><span class=\"line\"><span class=\"built_in\">dd</span> <span class=\"keyword\">if</span>=/dev/zero of=/usr/swap/swapfile1 bs=1M count=2048</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 目标文件表示为swap分区文件</span></span><br><span class=\"line\">mkswap /usr/swap/swapfile1</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 600 /usr/swap/swapfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 激活swap文件</span></span><br><span class=\"line\">swapon /usr/swap/swapfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 自动挂载</span></span><br><span class=\"line\">vim /etc/fstab</span><br><span class=\"line\"><span class=\"comment\">##添加</span></span><br><span class=\"line\">/usr/swap/swapfile1 swap swap defaults 0 0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改swapiness设置swap使用时机\"><a href=\"#修改swapiness设置swap使用时机\" class=\"headerlink\" title=\"修改swapiness设置swap使用时机\"></a>修改swapiness设置swap使用时机</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /proc/sys/vm/swappiness</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 临时修改</span></span><br><span class=\"line\">sysctl vm.swappiness=60</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## sysctl.conf 持久化</span></span><br><span class=\"line\">vm.swappiness=60</span><br></pre></td></tr></table></figure>\n<ul>\n<li>0意味着“在任何情况下都不要发生交换”。</li>\n<li>swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。</li>\n</ul>\n<h4 id=\"关闭swap\"><a href=\"#关闭swap\" class=\"headerlink\" title=\"关闭swap\"></a>关闭swap</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 临时修改</span></span><br><span class=\"line\">swapoff</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除/etc/fsta添加的内容</span></span><br><span class=\"line\">```nux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。Android是基于Linux的操作系统，所以也可以使用Swap分区来提升系统运行效率。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 查看swap状态</span></span><br><span class=\"line\">```bash</span><br><span class=\"line\">free -h</span><br><span class=\"line\"></span><br><span class=\"line\">swapon -s</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### 生成文件</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/swap</span><br><span class=\"line\"><span class=\"built_in\">dd</span> <span class=\"keyword\">if</span>=/dev/zero of=/usr/swap/swapfile1 bs=1M count=2048</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 目标文件表示为swap分区文件</span></span><br><span class=\"line\">mkswap /usr/swap/swapfile1</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 600 /usr/swap/swapfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 激活swap文件</span></span><br><span class=\"line\">swapon /usr/swap/swapfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 自动挂载</span></span><br><span class=\"line\">vim /etc/fstab</span><br><span class=\"line\"><span class=\"comment\">##添加</span></span><br><span class=\"line\">/usr/swap/swapfile1 swap swap defaults 0 0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改swapiness设置swap使用时机-1\"><a href=\"#修改swapiness设置swap使用时机-1\" class=\"headerlink\" title=\"修改swapiness设置swap使用时机\"></a>修改swapiness设置swap使用时机</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /proc/sys/vm/swappiness</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 临时修改</span></span><br><span class=\"line\">sysctl vm.swappiness=60</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## sysctl.conf 持久化</span></span><br><span class=\"line\">vm.swappiness=60</span><br></pre></td></tr></table></figure>\n<ul>\n<li>0意味着“在任何情况下都不要发生交换”。</li>\n<li>swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。</li>\n</ul>\n<h4 id=\"关闭swap-1\"><a href=\"#关闭swap-1\" class=\"headerlink\" title=\"关闭swap\"></a>关闭swap</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 临时修改</span></span><br><span class=\"line\">swapoff</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除/etc/fsta添加的内容</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"常用脚本\"><a href=\"#常用脚本\" class=\"headerlink\" title=\"常用脚本\"></a>常用脚本</h3><h4 id=\"操作快捷键\"><a href=\"#操作快捷键\" class=\"headerlink\" title=\"操作快捷键\"></a>操作快捷键</h4><ul>\n<li>Ctrl + r：可以快速查找历史命令；</li>\n<li>Ctrl + l：可以清理控制台屏幕；</li>\n<li>Ctrl + a \\ Ctrl + e：移动光标到命令行首\\行尾；</li>\n<li>Ctrl + w \\ Ctrl + k：删除光标之前\\之后的内容。</li>\n<li>Ctrl + c：强制终止程序的执行；</li>\n<li>Ctrl + z：挂起一个进程；</li>\n<li>Ctrl + d：终端中输入 exit 后回车。</li>\n</ul>\n<h4 id=\"磁盘空间分析\"><a href=\"#磁盘空间分析\" class=\"headerlink\" title=\"磁盘空间分析\"></a>磁盘空间分析</h4><h5 id=\"查看系统最大文件\"><a href=\"#查看系统最大文件\" class=\"headerlink\" title=\"查看系统最大文件\"></a>查看系统最大文件</h5><p>当磁盘空间不足，需要快速定位或者对文件使用率进行排序，需要查看哪一些文件目录或者文件占用的空间比较多，就需要如下组合命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">du</span> -x --max-depth=1 / | <span class=\"built_in\">sort</span> -k1 -nr</span><br></pre></td></tr></table></figure>\n\n<p>du命令</p>\n<ul>\n<li>-x 参数表示跳过其他文件系统，也就是只分析本文件系统里的文件，它可以帮助我们排除一些非本文件系统的统计信息，这样执行速度会更快也不容易出现一些额外的干扰项。</li>\n<li>–max-depth 参数设置为 1，这样就可以统计出根目录下第一级目录中的所有文件的大小。</li>\n</ul>\n<p>sort命令</p>\n<ul>\n<li>-k 参数指明具体按照哪一列进行排序</li>\n<li>-n 参数表示只对数值进行排序，</li>\n<li>-r 参数表示反向排序</li>\n</ul>\n<h5 id=\"查找目录下文件数量\"><a href=\"#查找目录下文件数量\" class=\"headerlink\" title=\"查找目录下文件数量\"></a>查找目录下文件数量</h5><p>适用于系统上产生很多碎片文件时，随之产生大量的 Inode ， Inode 用于存放着文件系统中文件的源数据，Inode过渡的使用会导致系统 Inode 资源不足。这种情况是不正常的，这个时候分析如果通过du 命令指能具体展示出磁盘空间的使用情况，但并不能分析出具体目录下产生了多少碎片文件，我们就需要如下的命令组合来对文件进行统计分析。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find . -<span class=\"built_in\">type</span> f | awk -F / -v OFS=/ <span class=\"string\">&#x27;&#123;$NF=&quot;&quot;;dir[$0]++&#125;END&#123;for(i in dir)print dir[i]&quot; &quot;i&#125;&#x27;</span> | <span class=\"built_in\">sort</span> -k1 -nr | <span class=\"built_in\">head</span></span><br></pre></td></tr></table></figure>\n\n<p>find命令</p>\n<ul>\n<li>-type f 查找指定文件类型</li>\n</ul>\n<p>awk命令</p>\n<ul>\n<li>-F &#x2F; 指定处理文件时字符串之间以&#x2F;分割</li>\n<li>-v OFS&#x3D;&#x2F; 显示结果时以&#x2F;分割展示</li>\n<li>awk的{} END {}格式， 前面{}表示行处理操作，END{}表示行处理后需要进行增提输出。</li>\n<li>$NF设置为空，表示将每一行的文件名信息去除，从而保留文件路径</li>\n<li>dir 是一个自增数组，用于统计结果</li>\n</ul>\n<h4 id=\"批量文件修改\"><a href=\"#批量文件修改\" class=\"headerlink\" title=\"批量文件修改\"></a>批量文件修改</h4><h4 id=\"批量文件改名\"><a href=\"#批量文件改名\" class=\"headerlink\" title=\"批量文件改名\"></a>批量文件改名</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rename .yml _pre.yml *</span><br></pre></td></tr></table></figure>\n<h4 id=\"awk-文档处理\"><a href=\"#awk-文档处理\" class=\"headerlink\" title=\"awk 文档处理\"></a>awk 文档处理</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 排序</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> fund_cust.txt | <span class=\"built_in\">sort</span> &gt; fund_cust_sort.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 取奇数行</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> fund_cust_sort.txt | awk <span class=\"string\">&#x27;&#123;if (NR%2==1) print $0&#125;&#x27;</span> &gt; fund_cust_sort_1.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 取偶数行</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> fund_cust_sort.txt | awk <span class=\"string\">&#x27;&#123;if (NR%2==0) print $0&#125;&#x27;</span> &gt; fund_cust_sort_2.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 合并</span></span><br><span class=\"line\"><span class=\"comment\"># NR：awk 处理的当前的行数，从1开始，直到所有文件处理完</span></span><br><span class=\"line\"><span class=\"comment\"># FNR：awk 处理的当前行在当前文件中所在的行数，从1开始，直到当前这个文件处理完，且在下一个文件会重新计数</span></span><br><span class=\"line\"><span class=\"comment\"># NR==FNR：表示当在处理第一个文件时</span></span><br><span class=\"line\"><span class=\"comment\"># a[NR]=$0：表示建立一个数组a，每行的行号和改行的内容形成一一对应的关系</span></span><br><span class=\"line\"><span class=\"comment\"># nr=NR：这里用nr这个变量记录第一个文件的行数；每处理一行nr被刷新一次，直到第一个文件结尾，最后nr就是第一个文件的行数！</span></span><br><span class=\"line\"><span class=\"comment\"># NR&gt;FNR：表示处理第二个文件时</span></span><br><span class=\"line\"><span class=\"comment\"># a[NR-nr]：表示第一个文件的内容</span></span><br><span class=\"line\"><span class=\"comment\"># $0：表示第二个文件的每行的所有内容</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;NR==FNR&#123;a[NR]=$1&quot;,&quot;$2&quot;,&quot;$3;nr=NR;&#125; NR&gt;FNR&#123;print a[NR-nr]&quot;,&quot;$3&quot;,&quot;$1&#125;&#x27;</span> fund_cust_sort_1.txt fund_cust_sort_2.txt &gt; fund_cust.csv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##gbk 转化为utf8</span></span><br><span class=\"line\">iconv -f gbk -t utf-8 2023-01-09.<span class=\"built_in\">log</span> &gt; 2023-01-09_1.<span class=\"built_in\">log</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 分隔符使用[]处理为 &#x27;[][]&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">tail</span> -65000 2023-01-09_1.<span class=\"built_in\">log</span> |  awk -F<span class=\"string\">&#x27;[][]&#x27;</span> <span class=\"string\">&#x27;/请求功能号为/&#123;print $18&quot; &quot;$12&quot; &quot; $1&#125;&#x27;</span> | <span class=\"built_in\">sort</span> -n </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 搜索过滤</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> last05.log | awk -F<span class=\"string\">&#x27;[: ]&#x27;</span> <span class=\"string\">&#x27;/结束,共花费时间/&#123;print $8&quot; &quot;$13$14&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"批量替换文件中内容\"><a href=\"#批量替换文件中内容\" class=\"headerlink\" title=\"批量替换文件中内容\"></a>批量替换文件中内容</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find ./-type f -name application.yml -<span class=\"built_in\">exec</span> sed -i<span class=\"string\">&quot;s/aaaaaa/bbbbbb/g&quot;</span>&#123;&#125;\\; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ls</span> | xargs sed -i<span class=\"string\">&quot;2s/aa/bb/g&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>find 命令, </p>\n<ul>\n<li>-name 参数指定查找的文件名</li>\n<li>-exec 参数将查找到的内容传递给下一个命令去继续执行相关逻辑</li>\n</ul>\n<p>sed 命令<br>主要对文件内容进行替换，这里会将 application.yml 文件中的 aaaaaa 替换成 bbbbbb</p>\n<h3 id=\"文件打包\"><a href=\"#文件打包\" class=\"headerlink\" title=\"文件打包\"></a>文件打包</h3><p>查找所有的txt文件，打包并拷贝</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(find . -name <span class=\"string\">&quot;*.txt&quot;</span> | xargs tar -cvf test.tar) &amp;&amp; <span class=\"built_in\">cp</span> -f test.tar ~</span><br></pre></td></tr></table></figure>"},{"title":"Python3离线升级","date":"2023-12-29T05:15:56.000Z","_content":"1. 安装依赖\n```bash\nyum install gcc libffi-devel zlib* openssl-devel libffi-devel zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make\n```\n\n2. 下载安装包\n```bash\nwget https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz\n```\n\n3. 编译安装\n```bash\ntar -xvJf Python-3.10.6.tar.xz\ncd Python-3.10.6\n\n# 3.编译安装\n./configure prefix=/usr/local/python3 --with-openssl=/usr/\nmake && make install\n```\n\n4. 环境替换\n```bash\nln -s /usr/local/python3/bin/python3 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n```\n\n5. 替换默认python\n```bash\nln -s /usr/bin/python3 /usr/bin/python\n\n## 替换后 yum不可用\nvim /usr/bin/yum  \nvim /usr/libexec/urlgrabber-ext-down\n\n#!/usr/bin/python -> #!/usr/bin/python2\n```\n#### 【选做】问题openssl兼容\n\n 1. 升级openssl\n```bash\nwget https://www.openssl.org/source/openssl-1.1.1a.tar.gz\ntar -zxvf openssl-1.1.1a.tar.gz\ncd openssl-1.1.1a\n\n./config --prefix=/usr/local/openssl no-zlib #不需要zlib\nmake\nmake install\n```\n\n2. 备份替换openssl\n```bash\n## 备份\nmv /usr/bin/openssl /usr/bin/openssl.bak\nmv /usr/include/openssl/ /usr/include/openssl.bak\n\n#替换\nln -s /usr/local/openssl/include/openssl /usr/include/openssl\nln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so\nln -s /usr/local/openssl/bin/openssl /usr/bin/openssl\n\nln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1\nln -s /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1\n\n## 动态库搜索路径\necho \"/usr/local/openssl/lib\" >> /etc/ld.so.conf\nldconfig -v\n\n## 查看版本 \nopenssl version\n\n```\n\n3. 重新安装python\n```bash\n./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl\nmake\nmake install\n```\n\n","source":"_posts/Linux/Python3离线升级.md","raw":"---\ntitle: Python3离线升级\ndate: 2023-12-29 13:15:56\ntags:\n  - 技术笔记\n  - Linux\n---\n1. 安装依赖\n```bash\nyum install gcc libffi-devel zlib* openssl-devel libffi-devel zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make\n```\n\n2. 下载安装包\n```bash\nwget https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz\n```\n\n3. 编译安装\n```bash\ntar -xvJf Python-3.10.6.tar.xz\ncd Python-3.10.6\n\n# 3.编译安装\n./configure prefix=/usr/local/python3 --with-openssl=/usr/\nmake && make install\n```\n\n4. 环境替换\n```bash\nln -s /usr/local/python3/bin/python3 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n```\n\n5. 替换默认python\n```bash\nln -s /usr/bin/python3 /usr/bin/python\n\n## 替换后 yum不可用\nvim /usr/bin/yum  \nvim /usr/libexec/urlgrabber-ext-down\n\n#!/usr/bin/python -> #!/usr/bin/python2\n```\n#### 【选做】问题openssl兼容\n\n 1. 升级openssl\n```bash\nwget https://www.openssl.org/source/openssl-1.1.1a.tar.gz\ntar -zxvf openssl-1.1.1a.tar.gz\ncd openssl-1.1.1a\n\n./config --prefix=/usr/local/openssl no-zlib #不需要zlib\nmake\nmake install\n```\n\n2. 备份替换openssl\n```bash\n## 备份\nmv /usr/bin/openssl /usr/bin/openssl.bak\nmv /usr/include/openssl/ /usr/include/openssl.bak\n\n#替换\nln -s /usr/local/openssl/include/openssl /usr/include/openssl\nln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so\nln -s /usr/local/openssl/bin/openssl /usr/bin/openssl\n\nln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1\nln -s /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1\n\n## 动态库搜索路径\necho \"/usr/local/openssl/lib\" >> /etc/ld.so.conf\nldconfig -v\n\n## 查看版本 \nopenssl version\n\n```\n\n3. 重新安装python\n```bash\n./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl\nmake\nmake install\n```\n\n","slug":"Linux/Python3离线升级","published":1,"updated":"2023-12-29T05:20:21.006Z","_id":"clqq60vsp0007yoqa5epd97bh","comments":1,"layout":"post","photos":[],"link":"","content":"<ol>\n<li><p>安装依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc libffi-devel zlib* openssl-devel libffi-devel zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载安装包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvJf Python-3.10.6.tar.xz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Python-3.10.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.编译安装</span></span><br><span class=\"line\">./configure prefix=/usr/local/python3 --with-openssl=/usr/</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>环境替换</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>替换默认python</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/bin/python3 /usr/bin/python</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 替换后 yum不可用</span></span><br><span class=\"line\">vim /usr/bin/yum  </span><br><span class=\"line\">vim /usr/libexec/urlgrabber-ext-down</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python -&gt; #!/usr/bin/python2</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"【选做】问题openssl兼容\"><a href=\"#【选做】问题openssl兼容\" class=\"headerlink\" title=\"【选做】问题openssl兼容\"></a>【选做】问题openssl兼容</h4><ol>\n<li><p>升级openssl</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz</span><br><span class=\"line\">tar -zxvf openssl-1.1.1a.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> openssl-1.1.1a</span><br><span class=\"line\"></span><br><span class=\"line\">./config --prefix=/usr/local/openssl no-zlib <span class=\"comment\">#不需要zlib</span></span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>备份替换openssl</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 备份</span></span><br><span class=\"line\"><span class=\"built_in\">mv</span> /usr/bin/openssl /usr/bin/openssl.bak</span><br><span class=\"line\"><span class=\"built_in\">mv</span> /usr/include/openssl/ /usr/include/openssl.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#替换</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/include/openssl /usr/include/openssl</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/bin/openssl /usr/bin/openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 动态库搜索路径</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;/usr/local/openssl/lib&quot;</span> &gt;&gt; /etc/ld.so.conf</span><br><span class=\"line\">ldconfig -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 查看版本 </span></span><br><span class=\"line\">openssl version</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新安装python</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>安装依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc libffi-devel zlib* openssl-devel libffi-devel zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载安装包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvJf Python-3.10.6.tar.xz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Python-3.10.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.编译安装</span></span><br><span class=\"line\">./configure prefix=/usr/local/python3 --with-openssl=/usr/</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>环境替换</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>替换默认python</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/bin/python3 /usr/bin/python</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 替换后 yum不可用</span></span><br><span class=\"line\">vim /usr/bin/yum  </span><br><span class=\"line\">vim /usr/libexec/urlgrabber-ext-down</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python -&gt; #!/usr/bin/python2</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"【选做】问题openssl兼容\"><a href=\"#【选做】问题openssl兼容\" class=\"headerlink\" title=\"【选做】问题openssl兼容\"></a>【选做】问题openssl兼容</h4><ol>\n<li><p>升级openssl</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz</span><br><span class=\"line\">tar -zxvf openssl-1.1.1a.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> openssl-1.1.1a</span><br><span class=\"line\"></span><br><span class=\"line\">./config --prefix=/usr/local/openssl no-zlib <span class=\"comment\">#不需要zlib</span></span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>备份替换openssl</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 备份</span></span><br><span class=\"line\"><span class=\"built_in\">mv</span> /usr/bin/openssl /usr/bin/openssl.bak</span><br><span class=\"line\"><span class=\"built_in\">mv</span> /usr/include/openssl/ /usr/include/openssl.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#替换</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/include/openssl /usr/include/openssl</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/bin/openssl /usr/bin/openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 动态库搜索路径</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;/usr/local/openssl/lib&quot;</span> &gt;&gt; /etc/ld.so.conf</span><br><span class=\"line\">ldconfig -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 查看版本 </span></span><br><span class=\"line\">openssl version</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新安装python</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"Sysetemd监控和启动应用程序","date":"2023-12-29T05:15:56.000Z","_content":"\n#### 创建测试程序\n```bash\n#!/bin/bash\n\n# file systemd_test.sh\nwhile :; do\n    echo `date` >> /tmp/systemd_test.log\n    sleep 1\ndone\n```\n\n#### 设置全局可访问\n```bash\n$ chmod +x systemd_test.sh\n$ ln -sf systemd_test.sh /usr/sbin/sysd-test\n```\n\n#### 创建 systemd 配置文件\nsysd-test.service\n```conf\n[Unit]\nDescription=sysd server daemon\nDocumentation=no\nAfter=no\nWants=no\n\n[Service]\nEnvironmentFile=no\nExecStart=/usr/sbin/sysd-test\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=process\nRestart=on-failure\nRestartSec=1s\n\n[Install]\nWantedBy=multi-user.target graphic.target      #相当于runlevel：2345\n```\n\n#### 启用\n```bash\n$ systemctl enable sysd-test.service\n```\n\n\n#### 查看程序日志\n```bash\njournalctl -f\n\njournalctl -u frpc.service\n```","source":"_posts/Linux/systemd监控和启动应用程序.md","raw":"---\ntitle: Sysetemd监控和启动应用程序\ndate: 2023-12-29 13:15:56\ntags:\n  - 技术笔记\n---\n\n#### 创建测试程序\n```bash\n#!/bin/bash\n\n# file systemd_test.sh\nwhile :; do\n    echo `date` >> /tmp/systemd_test.log\n    sleep 1\ndone\n```\n\n#### 设置全局可访问\n```bash\n$ chmod +x systemd_test.sh\n$ ln -sf systemd_test.sh /usr/sbin/sysd-test\n```\n\n#### 创建 systemd 配置文件\nsysd-test.service\n```conf\n[Unit]\nDescription=sysd server daemon\nDocumentation=no\nAfter=no\nWants=no\n\n[Service]\nEnvironmentFile=no\nExecStart=/usr/sbin/sysd-test\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=process\nRestart=on-failure\nRestartSec=1s\n\n[Install]\nWantedBy=multi-user.target graphic.target      #相当于runlevel：2345\n```\n\n#### 启用\n```bash\n$ systemctl enable sysd-test.service\n```\n\n\n#### 查看程序日志\n```bash\njournalctl -f\n\njournalctl -u frpc.service\n```","slug":"Linux/systemd监控和启动应用程序","published":1,"updated":"2023-12-29T05:20:43.623Z","_id":"clqq60vsq0008yoqa9wpa1k3r","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"创建测试程序\"><a href=\"#创建测试程序\" class=\"headerlink\" title=\"创建测试程序\"></a>创建测试程序</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file systemd_test.sh</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> :; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> `<span class=\"built_in\">date</span>` &gt;&gt; /tmp/systemd_test.log</span><br><span class=\"line\">    <span class=\"built_in\">sleep</span> 1</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"设置全局可访问\"><a href=\"#设置全局可访问\" class=\"headerlink\" title=\"设置全局可访问\"></a>设置全局可访问</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">chmod</span> +x systemd_test.sh</span><br><span class=\"line\">$ <span class=\"built_in\">ln</span> -sf systemd_test.sh /usr/sbin/sysd-test</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建-systemd-配置文件\"><a href=\"#创建-systemd-配置文件\" class=\"headerlink\" title=\"创建 systemd 配置文件\"></a>创建 systemd 配置文件</h4><p>sysd-test.service</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=sysd server daemon</span><br><span class=\"line\">Documentation=no</span><br><span class=\"line\">After=no</span><br><span class=\"line\">Wants=no</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">EnvironmentFile=no</span><br><span class=\"line\">ExecStart=/usr/sbin/sysd-test</span><br><span class=\"line\">ExecReload=/bin/kill -HUP $MAINPID</span><br><span class=\"line\">KillMode=process</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=1s</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target graphic.target      #相当于runlevel：2345</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启用\"><a href=\"#启用\" class=\"headerlink\" title=\"启用\"></a>启用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl <span class=\"built_in\">enable</span> sysd-test.service</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"查看程序日志\"><a href=\"#查看程序日志\" class=\"headerlink\" title=\"查看程序日志\"></a>查看程序日志</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">journalctl -f</span><br><span class=\"line\"></span><br><span class=\"line\">journalctl -u frpc.service</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"创建测试程序\"><a href=\"#创建测试程序\" class=\"headerlink\" title=\"创建测试程序\"></a>创建测试程序</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file systemd_test.sh</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> :; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> `<span class=\"built_in\">date</span>` &gt;&gt; /tmp/systemd_test.log</span><br><span class=\"line\">    <span class=\"built_in\">sleep</span> 1</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"设置全局可访问\"><a href=\"#设置全局可访问\" class=\"headerlink\" title=\"设置全局可访问\"></a>设置全局可访问</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">chmod</span> +x systemd_test.sh</span><br><span class=\"line\">$ <span class=\"built_in\">ln</span> -sf systemd_test.sh /usr/sbin/sysd-test</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建-systemd-配置文件\"><a href=\"#创建-systemd-配置文件\" class=\"headerlink\" title=\"创建 systemd 配置文件\"></a>创建 systemd 配置文件</h4><p>sysd-test.service</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=sysd server daemon</span><br><span class=\"line\">Documentation=no</span><br><span class=\"line\">After=no</span><br><span class=\"line\">Wants=no</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">EnvironmentFile=no</span><br><span class=\"line\">ExecStart=/usr/sbin/sysd-test</span><br><span class=\"line\">ExecReload=/bin/kill -HUP $MAINPID</span><br><span class=\"line\">KillMode=process</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=1s</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target graphic.target      #相当于runlevel：2345</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启用\"><a href=\"#启用\" class=\"headerlink\" title=\"启用\"></a>启用</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl <span class=\"built_in\">enable</span> sysd-test.service</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"查看程序日志\"><a href=\"#查看程序日志\" class=\"headerlink\" title=\"查看程序日志\"></a>查看程序日志</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">journalctl -f</span><br><span class=\"line\"></span><br><span class=\"line\">journalctl -u frpc.service</span><br></pre></td></tr></table></figure>"},{"title":"tcpdump常用样例","date":"2023-12-29T05:15:56.000Z","_content":"#### TCP FLAGS\n```\nUnskilled =  URG  =  (Not Displayed in Flag Field, Displayed elsewhere) \nAttackers =  ACK  =  (Not Displayed in Flag Field, Displayed elsewhere)\nPester      =  PSH  =  [P] (Push Data)\nReal          =  RST  =  [R] (Reset Connection)\nSecurity   =  SYN  =  [S] (Start Connection)\nFolks        =  FIN   =  [F] (Finish Connection)\n            SYN-ACK  =  [S.] (SynAcK Packet)\n                                 [.] (No Flag Set)\n```\n\n#### USAGE\n##### Basic communication \nsee the basics without many options\n```bash\ntcpdump -i eth0 -nS\n```\n\nBasic communication (very verbose) ,see a good amount of traffic, with verbosity and no name help\n```bash\ntcpdump -i eth0 -nnvvS\n```\n\n##### A deeper look at the traffic \nadds -X for payload but doesn’t grab any more of the packet\n```bash\ntcpdump -i eth0 -nnvvXS\n```\n\n##### Heavy packet viewing \nthe final “s” increases the snaplength, grabbing the whole packet\n```bash\ntcpdump -nnvvXSs 1514\n```\n##### host \nlook for traffic based on IP address (also works with hostname if you’re not using -n) \n```bash\ntcpdump host 1.2.3.4\n```\n##### src, dst \nfind traffic from only a source or destination (eliminates one side of a host conversation) \n```bash\n tcpdump src 2.3.4.5 \n tcpdump dst 3.4.5.6\n```\n\n##### net \ncapture an entire network using CIDR notation \n```bash\ntcpdump net 1.2.3.0/24\n```\n##### proto \nworks for tcp, udp, and icmp. Note that you don’t have to type proto \n```bash\ntcpdump icmp\n```\n##### port \nsee only traffic to or from a certain port \n```bash\ntcpdump port 3389\n```\n\n##### src, dst port \nfilter based on the source or destination port \n```bash\ntcpdump src port 1025 # tcpdump dst port 389\n```\n##### src/dst, port, protocol \ncombine all three \n```bash\ntcpdump src port 1025 and tcp \ntcpdump udp and src port 53\n```\n\n##### Port Ranges\nYou also have the option to filter by a range of ports instead of declaring them individually, and to only see packets that are above or below a certain size.\n\nsee traffic to any port in a range \n```bash\ntcpdump portrange 21-23\n```\n##### Packet Size Filter \nonly see packets below or above a certain size (in bytes) \n```bash\ntcpdump less 32 \ntcpdump greater 128\n```\n[ You can use the symbols for less than, greater than, and less than or equal / greater than or equal signs as well. ]\nfiltering for size using symbols \n```bash\ntcpdump > 32 \ntcpdump <= 128\n```\n\n[ Note: Only the PSH, RST, SYN, and FIN flags are displayed in tcpdump‘s flag field output. URGs and ACKs are displayed, but they are shown elsewhere in the output rather than in the flags field ]\n\nKeep in mind the reasons these filters work. The filters above find these various packets because tcp[13] looks at offset 13 in the TCP header, the number represents the location within the byte, and the !=0 means that the flag in question is set to 1, i.e. it’s on.\n\n##### Show all URG packets:\n```bash\ntcpdump 'tcp[13] & 32 != 0'\n```\n\n##### Show all ACK packets:\n```bash\ntcpdump 'tcp[13] & 16 != 0'\n```\n\n##### Show all PSH packets:\n```bash\ntcpdump 'tcp[13] & 8 != 0'\n```\n\n##### Show all RST packets:\n```bash\ntcpdump 'tcp[13] & 4 != 0'\n```\n\n##### Show all SYN packets:\n```bash\ntcpdump 'tcp[13] & 2 != 0'\n```\n\n##### Show all FIN packets:\n```bash\ntcpdump 'tcp[13] & 1 != 0'\n```\n\n##### Show all SYN-ACK packets:\n```bash\ntcpdump 'tcp[13] = 18'\n```\n\n##### Show icmp echo request and reply\n```bash\ntcpdump -n icmp and 'icmp[0] != 8 and icmp[0] != 0'\n```\n\n##### Show all IP packets with a non-zero TOS field \none byte TOS field is at offset 1 in IP header\n```bash\ntcpdump -v -n ip and ip[1]!=0\n```\n\n##### Show all IP packets with TTL less than some value\non byte TTL field is at offset 8 in IP header\n```bash\ntcpdump -v ip and 'ip[8]<2'\n```\n\n##### Show TCP SYN packets\n```bash\ntcpdump -n tcp and port 80 and 'tcp[tcpflags] & tcp-syn == tcp-syn'\ntcpdump tcp and port 80 and 'tcp[tcpflags] == tcp-syn'\ntcpdump -i <interface> \"tcp[tcpflags] & (tcp-syn) != 0\"\n```\n\n##### Show TCP ACK packets\n```bash\ntcpdump -i <interface> \"tcp[tcpflags] & (tcp-ack) != 0\"\n```\n\n##### Show TCP SYN/ACK packets \n(typically, responses from servers):\n```bash\ntcpdump -n tcp and 'tcp[tcpflags] & (tcp-syn|tcp-ack) == (tcp-syn|tcp-ack)'\ntcpdump -n tcp and 'tcp[tcpflags] & tcp-syn == tcp-syn' and 'tcp[tcpflags] & tcp-ack == tcp-ack'\ntcpdump -i <interface> \"tcp[tcpflags] & (tcp-syn|tcp-ack) != 0\"\n```\n\n#### Show TCP FIN packets\n```bash\ntcpdump -i <interface> \"tcp[tcpflags] & (tcp-fin) != 0\"\n```\n\n##### Show ARP Packets with MAC address\n```bash\ntcpdump -vv -e -nn ether proto 0x0806\n```\n\n##### Show packets of a specified length (IP packet length (16 bits) is located at offset 2 in IP header):\n```bash\ntcpdump -l icmp and '(ip[2:2]>50)' -w - |tcpdump -r - -v ip and '(ip[2:2]<60)'\n```\n\nMore Details: \nhttp://danielmiessler.com/study/tcpdump/","source":"_posts/Linux/Tcpdump常用命令.md","raw":"---\ntitle: tcpdump常用样例\ndate: 2023-12-29 13:15:56\ntags:\n  - 技术笔记\n  - Linux\n---\n#### TCP FLAGS\n```\nUnskilled =  URG  =  (Not Displayed in Flag Field, Displayed elsewhere) \nAttackers =  ACK  =  (Not Displayed in Flag Field, Displayed elsewhere)\nPester      =  PSH  =  [P] (Push Data)\nReal          =  RST  =  [R] (Reset Connection)\nSecurity   =  SYN  =  [S] (Start Connection)\nFolks        =  FIN   =  [F] (Finish Connection)\n            SYN-ACK  =  [S.] (SynAcK Packet)\n                                 [.] (No Flag Set)\n```\n\n#### USAGE\n##### Basic communication \nsee the basics without many options\n```bash\ntcpdump -i eth0 -nS\n```\n\nBasic communication (very verbose) ,see a good amount of traffic, with verbosity and no name help\n```bash\ntcpdump -i eth0 -nnvvS\n```\n\n##### A deeper look at the traffic \nadds -X for payload but doesn’t grab any more of the packet\n```bash\ntcpdump -i eth0 -nnvvXS\n```\n\n##### Heavy packet viewing \nthe final “s” increases the snaplength, grabbing the whole packet\n```bash\ntcpdump -nnvvXSs 1514\n```\n##### host \nlook for traffic based on IP address (also works with hostname if you’re not using -n) \n```bash\ntcpdump host 1.2.3.4\n```\n##### src, dst \nfind traffic from only a source or destination (eliminates one side of a host conversation) \n```bash\n tcpdump src 2.3.4.5 \n tcpdump dst 3.4.5.6\n```\n\n##### net \ncapture an entire network using CIDR notation \n```bash\ntcpdump net 1.2.3.0/24\n```\n##### proto \nworks for tcp, udp, and icmp. Note that you don’t have to type proto \n```bash\ntcpdump icmp\n```\n##### port \nsee only traffic to or from a certain port \n```bash\ntcpdump port 3389\n```\n\n##### src, dst port \nfilter based on the source or destination port \n```bash\ntcpdump src port 1025 # tcpdump dst port 389\n```\n##### src/dst, port, protocol \ncombine all three \n```bash\ntcpdump src port 1025 and tcp \ntcpdump udp and src port 53\n```\n\n##### Port Ranges\nYou also have the option to filter by a range of ports instead of declaring them individually, and to only see packets that are above or below a certain size.\n\nsee traffic to any port in a range \n```bash\ntcpdump portrange 21-23\n```\n##### Packet Size Filter \nonly see packets below or above a certain size (in bytes) \n```bash\ntcpdump less 32 \ntcpdump greater 128\n```\n[ You can use the symbols for less than, greater than, and less than or equal / greater than or equal signs as well. ]\nfiltering for size using symbols \n```bash\ntcpdump > 32 \ntcpdump <= 128\n```\n\n[ Note: Only the PSH, RST, SYN, and FIN flags are displayed in tcpdump‘s flag field output. URGs and ACKs are displayed, but they are shown elsewhere in the output rather than in the flags field ]\n\nKeep in mind the reasons these filters work. The filters above find these various packets because tcp[13] looks at offset 13 in the TCP header, the number represents the location within the byte, and the !=0 means that the flag in question is set to 1, i.e. it’s on.\n\n##### Show all URG packets:\n```bash\ntcpdump 'tcp[13] & 32 != 0'\n```\n\n##### Show all ACK packets:\n```bash\ntcpdump 'tcp[13] & 16 != 0'\n```\n\n##### Show all PSH packets:\n```bash\ntcpdump 'tcp[13] & 8 != 0'\n```\n\n##### Show all RST packets:\n```bash\ntcpdump 'tcp[13] & 4 != 0'\n```\n\n##### Show all SYN packets:\n```bash\ntcpdump 'tcp[13] & 2 != 0'\n```\n\n##### Show all FIN packets:\n```bash\ntcpdump 'tcp[13] & 1 != 0'\n```\n\n##### Show all SYN-ACK packets:\n```bash\ntcpdump 'tcp[13] = 18'\n```\n\n##### Show icmp echo request and reply\n```bash\ntcpdump -n icmp and 'icmp[0] != 8 and icmp[0] != 0'\n```\n\n##### Show all IP packets with a non-zero TOS field \none byte TOS field is at offset 1 in IP header\n```bash\ntcpdump -v -n ip and ip[1]!=0\n```\n\n##### Show all IP packets with TTL less than some value\non byte TTL field is at offset 8 in IP header\n```bash\ntcpdump -v ip and 'ip[8]<2'\n```\n\n##### Show TCP SYN packets\n```bash\ntcpdump -n tcp and port 80 and 'tcp[tcpflags] & tcp-syn == tcp-syn'\ntcpdump tcp and port 80 and 'tcp[tcpflags] == tcp-syn'\ntcpdump -i <interface> \"tcp[tcpflags] & (tcp-syn) != 0\"\n```\n\n##### Show TCP ACK packets\n```bash\ntcpdump -i <interface> \"tcp[tcpflags] & (tcp-ack) != 0\"\n```\n\n##### Show TCP SYN/ACK packets \n(typically, responses from servers):\n```bash\ntcpdump -n tcp and 'tcp[tcpflags] & (tcp-syn|tcp-ack) == (tcp-syn|tcp-ack)'\ntcpdump -n tcp and 'tcp[tcpflags] & tcp-syn == tcp-syn' and 'tcp[tcpflags] & tcp-ack == tcp-ack'\ntcpdump -i <interface> \"tcp[tcpflags] & (tcp-syn|tcp-ack) != 0\"\n```\n\n#### Show TCP FIN packets\n```bash\ntcpdump -i <interface> \"tcp[tcpflags] & (tcp-fin) != 0\"\n```\n\n##### Show ARP Packets with MAC address\n```bash\ntcpdump -vv -e -nn ether proto 0x0806\n```\n\n##### Show packets of a specified length (IP packet length (16 bits) is located at offset 2 in IP header):\n```bash\ntcpdump -l icmp and '(ip[2:2]>50)' -w - |tcpdump -r - -v ip and '(ip[2:2]<60)'\n```\n\nMore Details: \nhttp://danielmiessler.com/study/tcpdump/","slug":"Linux/Tcpdump常用命令","published":1,"updated":"2023-12-29T05:21:45.103Z","_id":"clqq60vsq0009yoqac2mbczx1","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"TCP-FLAGS\"><a href=\"#TCP-FLAGS\" class=\"headerlink\" title=\"TCP FLAGS\"></a>TCP FLAGS</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unskilled =  URG  =  (Not Displayed in Flag Field, Displayed elsewhere) </span><br><span class=\"line\">Attackers =  ACK  =  (Not Displayed in Flag Field, Displayed elsewhere)</span><br><span class=\"line\">Pester      =  PSH  =  [P] (Push Data)</span><br><span class=\"line\">Real          =  RST  =  [R] (Reset Connection)</span><br><span class=\"line\">Security   =  SYN  =  [S] (Start Connection)</span><br><span class=\"line\">Folks        =  FIN   =  [F] (Finish Connection)</span><br><span class=\"line\">            SYN-ACK  =  [S.] (SynAcK Packet)</span><br><span class=\"line\">                                 [.] (No Flag Set)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"USAGE\"><a href=\"#USAGE\" class=\"headerlink\" title=\"USAGE\"></a>USAGE</h4><h5 id=\"Basic-communication\"><a href=\"#Basic-communication\" class=\"headerlink\" title=\"Basic communication\"></a>Basic communication</h5><p>see the basics without many options</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i eth0 -nS</span><br></pre></td></tr></table></figure>\n\n<p>Basic communication (very verbose) ,see a good amount of traffic, with verbosity and no name help</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i eth0 -nnvvS</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"A-deeper-look-at-the-traffic\"><a href=\"#A-deeper-look-at-the-traffic\" class=\"headerlink\" title=\"A deeper look at the traffic\"></a>A deeper look at the traffic</h5><p>adds -X for payload but doesn’t grab any more of the packet</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i eth0 -nnvvXS</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Heavy-packet-viewing\"><a href=\"#Heavy-packet-viewing\" class=\"headerlink\" title=\"Heavy packet viewing\"></a>Heavy packet viewing</h5><p>the final “s” increases the snaplength, grabbing the whole packet</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -nnvvXSs 1514</span><br></pre></td></tr></table></figure>\n<h5 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"host\"></a>host</h5><p>look for traffic based on IP address (also works with hostname if you’re not using -n) </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump host 1.2.3.4</span><br></pre></td></tr></table></figure>\n<h5 id=\"src-dst\"><a href=\"#src-dst\" class=\"headerlink\" title=\"src, dst\"></a>src, dst</h5><p>find traffic from only a source or destination (eliminates one side of a host conversation) </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump src 2.3.4.5 </span><br><span class=\"line\">tcpdump dst 3.4.5.6</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"net\"><a href=\"#net\" class=\"headerlink\" title=\"net\"></a>net</h5><p>capture an entire network using CIDR notation </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump net 1.2.3.0/24</span><br></pre></td></tr></table></figure>\n<h5 id=\"proto\"><a href=\"#proto\" class=\"headerlink\" title=\"proto\"></a>proto</h5><p>works for tcp, udp, and icmp. Note that you don’t have to type proto </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump icmp</span><br></pre></td></tr></table></figure>\n<h5 id=\"port\"><a href=\"#port\" class=\"headerlink\" title=\"port\"></a>port</h5><p>see only traffic to or from a certain port </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump port 3389</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"src-dst-port\"><a href=\"#src-dst-port\" class=\"headerlink\" title=\"src, dst port\"></a>src, dst port</h5><p>filter based on the source or destination port </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump src port 1025 <span class=\"comment\"># tcpdump dst port 389</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"src-dst-port-protocol\"><a href=\"#src-dst-port-protocol\" class=\"headerlink\" title=\"src&#x2F;dst, port, protocol\"></a>src&#x2F;dst, port, protocol</h5><p>combine all three </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump src port 1025 and tcp </span><br><span class=\"line\">tcpdump udp and src port 53</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Port-Ranges\"><a href=\"#Port-Ranges\" class=\"headerlink\" title=\"Port Ranges\"></a>Port Ranges</h5><p>You also have the option to filter by a range of ports instead of declaring them individually, and to only see packets that are above or below a certain size.</p>\n<p>see traffic to any port in a range </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump portrange 21-23</span><br></pre></td></tr></table></figure>\n<h5 id=\"Packet-Size-Filter\"><a href=\"#Packet-Size-Filter\" class=\"headerlink\" title=\"Packet Size Filter\"></a>Packet Size Filter</h5><p>only see packets below or above a certain size (in bytes) </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump less 32 </span><br><span class=\"line\">tcpdump greater 128</span><br></pre></td></tr></table></figure>\n<p>[ You can use the symbols for less than, greater than, and less than or equal &#x2F; greater than or equal signs as well. ]<br>filtering for size using symbols </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump &gt; 32 </span><br><span class=\"line\">tcpdump &lt;= 128</span><br></pre></td></tr></table></figure>\n\n<p>[ Note: Only the PSH, RST, SYN, and FIN flags are displayed in tcpdump‘s flag field output. URGs and ACKs are displayed, but they are shown elsewhere in the output rather than in the flags field ]</p>\n<p>Keep in mind the reasons these filters work. The filters above find these various packets because tcp[13] looks at offset 13 in the TCP header, the number represents the location within the byte, and the !&#x3D;0 means that the flag in question is set to 1, i.e. it’s on.</p>\n<h5 id=\"Show-all-URG-packets\"><a href=\"#Show-all-URG-packets\" class=\"headerlink\" title=\"Show all URG packets:\"></a>Show all URG packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 32 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-ACK-packets\"><a href=\"#Show-all-ACK-packets\" class=\"headerlink\" title=\"Show all ACK packets:\"></a>Show all ACK packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 16 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-PSH-packets\"><a href=\"#Show-all-PSH-packets\" class=\"headerlink\" title=\"Show all PSH packets:\"></a>Show all PSH packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 8 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-RST-packets\"><a href=\"#Show-all-RST-packets\" class=\"headerlink\" title=\"Show all RST packets:\"></a>Show all RST packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 4 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-SYN-packets\"><a href=\"#Show-all-SYN-packets\" class=\"headerlink\" title=\"Show all SYN packets:\"></a>Show all SYN packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 2 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-FIN-packets\"><a href=\"#Show-all-FIN-packets\" class=\"headerlink\" title=\"Show all FIN packets:\"></a>Show all FIN packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 1 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-SYN-ACK-packets\"><a href=\"#Show-all-SYN-ACK-packets\" class=\"headerlink\" title=\"Show all SYN-ACK packets:\"></a>Show all SYN-ACK packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] = 18&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-icmp-echo-request-and-reply\"><a href=\"#Show-icmp-echo-request-and-reply\" class=\"headerlink\" title=\"Show icmp echo request and reply\"></a>Show icmp echo request and reply</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -n icmp and <span class=\"string\">&#x27;icmp[0] != 8 and icmp[0] != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-IP-packets-with-a-non-zero-TOS-field\"><a href=\"#Show-all-IP-packets-with-a-non-zero-TOS-field\" class=\"headerlink\" title=\"Show all IP packets with a non-zero TOS field\"></a>Show all IP packets with a non-zero TOS field</h5><p>one byte TOS field is at offset 1 in IP header</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -v -n ip and ip[1]!=0</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-IP-packets-with-TTL-less-than-some-value\"><a href=\"#Show-all-IP-packets-with-TTL-less-than-some-value\" class=\"headerlink\" title=\"Show all IP packets with TTL less than some value\"></a>Show all IP packets with TTL less than some value</h5><p>on byte TTL field is at offset 8 in IP header</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -v ip and <span class=\"string\">&#x27;ip[8]&lt;2&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-TCP-SYN-packets\"><a href=\"#Show-TCP-SYN-packets\" class=\"headerlink\" title=\"Show TCP SYN packets\"></a>Show TCP SYN packets</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -n tcp and port 80 and <span class=\"string\">&#x27;tcp[tcpflags] &amp; tcp-syn == tcp-syn&#x27;</span></span><br><span class=\"line\">tcpdump tcp and port 80 and <span class=\"string\">&#x27;tcp[tcpflags] == tcp-syn&#x27;</span></span><br><span class=\"line\">tcpdump -i &lt;interface&gt; <span class=\"string\">&quot;tcp[tcpflags] &amp; (tcp-syn) != 0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-TCP-ACK-packets\"><a href=\"#Show-TCP-ACK-packets\" class=\"headerlink\" title=\"Show TCP ACK packets\"></a>Show TCP ACK packets</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i &lt;interface&gt; <span class=\"string\">&quot;tcp[tcpflags] &amp; (tcp-ack) != 0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-TCP-SYN-ACK-packets\"><a href=\"#Show-TCP-SYN-ACK-packets\" class=\"headerlink\" title=\"Show TCP SYN&#x2F;ACK packets\"></a>Show TCP SYN&#x2F;ACK packets</h5><p>(typically, responses from servers):</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -n tcp and <span class=\"string\">&#x27;tcp[tcpflags] &amp; (tcp-syn|tcp-ack) == (tcp-syn|tcp-ack)&#x27;</span></span><br><span class=\"line\">tcpdump -n tcp and <span class=\"string\">&#x27;tcp[tcpflags] &amp; tcp-syn == tcp-syn&#x27;</span> and <span class=\"string\">&#x27;tcp[tcpflags] &amp; tcp-ack == tcp-ack&#x27;</span></span><br><span class=\"line\">tcpdump -i &lt;interface&gt; <span class=\"string\">&quot;tcp[tcpflags] &amp; (tcp-syn|tcp-ack) != 0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Show-TCP-FIN-packets\"><a href=\"#Show-TCP-FIN-packets\" class=\"headerlink\" title=\"Show TCP FIN packets\"></a>Show TCP FIN packets</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i &lt;interface&gt; <span class=\"string\">&quot;tcp[tcpflags] &amp; (tcp-fin) != 0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-ARP-Packets-with-MAC-address\"><a href=\"#Show-ARP-Packets-with-MAC-address\" class=\"headerlink\" title=\"Show ARP Packets with MAC address\"></a>Show ARP Packets with MAC address</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -vv -e -nn ether proto 0x0806</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-packets-of-a-specified-length-IP-packet-length-16-bits-is-located-at-offset-2-in-IP-header\"><a href=\"#Show-packets-of-a-specified-length-IP-packet-length-16-bits-is-located-at-offset-2-in-IP-header\" class=\"headerlink\" title=\"Show packets of a specified length (IP packet length (16 bits) is located at offset 2 in IP header):\"></a>Show packets of a specified length (IP packet length (16 bits) is located at offset 2 in IP header):</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -l icmp and <span class=\"string\">&#x27;(ip[2:2]&gt;50)&#x27;</span> -w - |tcpdump -r - -v ip and <span class=\"string\">&#x27;(ip[2:2]&lt;60)&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>More Details:<br><a href=\"http://danielmiessler.com/study/tcpdump/\">http://danielmiessler.com/study/tcpdump/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"TCP-FLAGS\"><a href=\"#TCP-FLAGS\" class=\"headerlink\" title=\"TCP FLAGS\"></a>TCP FLAGS</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unskilled =  URG  =  (Not Displayed in Flag Field, Displayed elsewhere) </span><br><span class=\"line\">Attackers =  ACK  =  (Not Displayed in Flag Field, Displayed elsewhere)</span><br><span class=\"line\">Pester      =  PSH  =  [P] (Push Data)</span><br><span class=\"line\">Real          =  RST  =  [R] (Reset Connection)</span><br><span class=\"line\">Security   =  SYN  =  [S] (Start Connection)</span><br><span class=\"line\">Folks        =  FIN   =  [F] (Finish Connection)</span><br><span class=\"line\">            SYN-ACK  =  [S.] (SynAcK Packet)</span><br><span class=\"line\">                                 [.] (No Flag Set)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"USAGE\"><a href=\"#USAGE\" class=\"headerlink\" title=\"USAGE\"></a>USAGE</h4><h5 id=\"Basic-communication\"><a href=\"#Basic-communication\" class=\"headerlink\" title=\"Basic communication\"></a>Basic communication</h5><p>see the basics without many options</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i eth0 -nS</span><br></pre></td></tr></table></figure>\n\n<p>Basic communication (very verbose) ,see a good amount of traffic, with verbosity and no name help</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i eth0 -nnvvS</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"A-deeper-look-at-the-traffic\"><a href=\"#A-deeper-look-at-the-traffic\" class=\"headerlink\" title=\"A deeper look at the traffic\"></a>A deeper look at the traffic</h5><p>adds -X for payload but doesn’t grab any more of the packet</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i eth0 -nnvvXS</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Heavy-packet-viewing\"><a href=\"#Heavy-packet-viewing\" class=\"headerlink\" title=\"Heavy packet viewing\"></a>Heavy packet viewing</h5><p>the final “s” increases the snaplength, grabbing the whole packet</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -nnvvXSs 1514</span><br></pre></td></tr></table></figure>\n<h5 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"host\"></a>host</h5><p>look for traffic based on IP address (also works with hostname if you’re not using -n) </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump host 1.2.3.4</span><br></pre></td></tr></table></figure>\n<h5 id=\"src-dst\"><a href=\"#src-dst\" class=\"headerlink\" title=\"src, dst\"></a>src, dst</h5><p>find traffic from only a source or destination (eliminates one side of a host conversation) </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump src 2.3.4.5 </span><br><span class=\"line\">tcpdump dst 3.4.5.6</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"net\"><a href=\"#net\" class=\"headerlink\" title=\"net\"></a>net</h5><p>capture an entire network using CIDR notation </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump net 1.2.3.0/24</span><br></pre></td></tr></table></figure>\n<h5 id=\"proto\"><a href=\"#proto\" class=\"headerlink\" title=\"proto\"></a>proto</h5><p>works for tcp, udp, and icmp. Note that you don’t have to type proto </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump icmp</span><br></pre></td></tr></table></figure>\n<h5 id=\"port\"><a href=\"#port\" class=\"headerlink\" title=\"port\"></a>port</h5><p>see only traffic to or from a certain port </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump port 3389</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"src-dst-port\"><a href=\"#src-dst-port\" class=\"headerlink\" title=\"src, dst port\"></a>src, dst port</h5><p>filter based on the source or destination port </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump src port 1025 <span class=\"comment\"># tcpdump dst port 389</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"src-dst-port-protocol\"><a href=\"#src-dst-port-protocol\" class=\"headerlink\" title=\"src&#x2F;dst, port, protocol\"></a>src&#x2F;dst, port, protocol</h5><p>combine all three </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump src port 1025 and tcp </span><br><span class=\"line\">tcpdump udp and src port 53</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Port-Ranges\"><a href=\"#Port-Ranges\" class=\"headerlink\" title=\"Port Ranges\"></a>Port Ranges</h5><p>You also have the option to filter by a range of ports instead of declaring them individually, and to only see packets that are above or below a certain size.</p>\n<p>see traffic to any port in a range </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump portrange 21-23</span><br></pre></td></tr></table></figure>\n<h5 id=\"Packet-Size-Filter\"><a href=\"#Packet-Size-Filter\" class=\"headerlink\" title=\"Packet Size Filter\"></a>Packet Size Filter</h5><p>only see packets below or above a certain size (in bytes) </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump less 32 </span><br><span class=\"line\">tcpdump greater 128</span><br></pre></td></tr></table></figure>\n<p>[ You can use the symbols for less than, greater than, and less than or equal &#x2F; greater than or equal signs as well. ]<br>filtering for size using symbols </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump &gt; 32 </span><br><span class=\"line\">tcpdump &lt;= 128</span><br></pre></td></tr></table></figure>\n\n<p>[ Note: Only the PSH, RST, SYN, and FIN flags are displayed in tcpdump‘s flag field output. URGs and ACKs are displayed, but they are shown elsewhere in the output rather than in the flags field ]</p>\n<p>Keep in mind the reasons these filters work. The filters above find these various packets because tcp[13] looks at offset 13 in the TCP header, the number represents the location within the byte, and the !&#x3D;0 means that the flag in question is set to 1, i.e. it’s on.</p>\n<h5 id=\"Show-all-URG-packets\"><a href=\"#Show-all-URG-packets\" class=\"headerlink\" title=\"Show all URG packets:\"></a>Show all URG packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 32 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-ACK-packets\"><a href=\"#Show-all-ACK-packets\" class=\"headerlink\" title=\"Show all ACK packets:\"></a>Show all ACK packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 16 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-PSH-packets\"><a href=\"#Show-all-PSH-packets\" class=\"headerlink\" title=\"Show all PSH packets:\"></a>Show all PSH packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 8 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-RST-packets\"><a href=\"#Show-all-RST-packets\" class=\"headerlink\" title=\"Show all RST packets:\"></a>Show all RST packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 4 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-SYN-packets\"><a href=\"#Show-all-SYN-packets\" class=\"headerlink\" title=\"Show all SYN packets:\"></a>Show all SYN packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 2 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-FIN-packets\"><a href=\"#Show-all-FIN-packets\" class=\"headerlink\" title=\"Show all FIN packets:\"></a>Show all FIN packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] &amp; 1 != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-SYN-ACK-packets\"><a href=\"#Show-all-SYN-ACK-packets\" class=\"headerlink\" title=\"Show all SYN-ACK packets:\"></a>Show all SYN-ACK packets:</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump <span class=\"string\">&#x27;tcp[13] = 18&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-icmp-echo-request-and-reply\"><a href=\"#Show-icmp-echo-request-and-reply\" class=\"headerlink\" title=\"Show icmp echo request and reply\"></a>Show icmp echo request and reply</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -n icmp and <span class=\"string\">&#x27;icmp[0] != 8 and icmp[0] != 0&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-IP-packets-with-a-non-zero-TOS-field\"><a href=\"#Show-all-IP-packets-with-a-non-zero-TOS-field\" class=\"headerlink\" title=\"Show all IP packets with a non-zero TOS field\"></a>Show all IP packets with a non-zero TOS field</h5><p>one byte TOS field is at offset 1 in IP header</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -v -n ip and ip[1]!=0</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-all-IP-packets-with-TTL-less-than-some-value\"><a href=\"#Show-all-IP-packets-with-TTL-less-than-some-value\" class=\"headerlink\" title=\"Show all IP packets with TTL less than some value\"></a>Show all IP packets with TTL less than some value</h5><p>on byte TTL field is at offset 8 in IP header</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -v ip and <span class=\"string\">&#x27;ip[8]&lt;2&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-TCP-SYN-packets\"><a href=\"#Show-TCP-SYN-packets\" class=\"headerlink\" title=\"Show TCP SYN packets\"></a>Show TCP SYN packets</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -n tcp and port 80 and <span class=\"string\">&#x27;tcp[tcpflags] &amp; tcp-syn == tcp-syn&#x27;</span></span><br><span class=\"line\">tcpdump tcp and port 80 and <span class=\"string\">&#x27;tcp[tcpflags] == tcp-syn&#x27;</span></span><br><span class=\"line\">tcpdump -i &lt;interface&gt; <span class=\"string\">&quot;tcp[tcpflags] &amp; (tcp-syn) != 0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-TCP-ACK-packets\"><a href=\"#Show-TCP-ACK-packets\" class=\"headerlink\" title=\"Show TCP ACK packets\"></a>Show TCP ACK packets</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i &lt;interface&gt; <span class=\"string\">&quot;tcp[tcpflags] &amp; (tcp-ack) != 0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-TCP-SYN-ACK-packets\"><a href=\"#Show-TCP-SYN-ACK-packets\" class=\"headerlink\" title=\"Show TCP SYN&#x2F;ACK packets\"></a>Show TCP SYN&#x2F;ACK packets</h5><p>(typically, responses from servers):</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -n tcp and <span class=\"string\">&#x27;tcp[tcpflags] &amp; (tcp-syn|tcp-ack) == (tcp-syn|tcp-ack)&#x27;</span></span><br><span class=\"line\">tcpdump -n tcp and <span class=\"string\">&#x27;tcp[tcpflags] &amp; tcp-syn == tcp-syn&#x27;</span> and <span class=\"string\">&#x27;tcp[tcpflags] &amp; tcp-ack == tcp-ack&#x27;</span></span><br><span class=\"line\">tcpdump -i &lt;interface&gt; <span class=\"string\">&quot;tcp[tcpflags] &amp; (tcp-syn|tcp-ack) != 0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Show-TCP-FIN-packets\"><a href=\"#Show-TCP-FIN-packets\" class=\"headerlink\" title=\"Show TCP FIN packets\"></a>Show TCP FIN packets</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i &lt;interface&gt; <span class=\"string\">&quot;tcp[tcpflags] &amp; (tcp-fin) != 0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-ARP-Packets-with-MAC-address\"><a href=\"#Show-ARP-Packets-with-MAC-address\" class=\"headerlink\" title=\"Show ARP Packets with MAC address\"></a>Show ARP Packets with MAC address</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -vv -e -nn ether proto 0x0806</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Show-packets-of-a-specified-length-IP-packet-length-16-bits-is-located-at-offset-2-in-IP-header\"><a href=\"#Show-packets-of-a-specified-length-IP-packet-length-16-bits-is-located-at-offset-2-in-IP-header\" class=\"headerlink\" title=\"Show packets of a specified length (IP packet length (16 bits) is located at offset 2 in IP header):\"></a>Show packets of a specified length (IP packet length (16 bits) is located at offset 2 in IP header):</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -l icmp and <span class=\"string\">&#x27;(ip[2:2]&gt;50)&#x27;</span> -w - |tcpdump -r - -v ip and <span class=\"string\">&#x27;(ip[2:2]&lt;60)&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>More Details:<br><a href=\"http://danielmiessler.com/study/tcpdump/\">http://danielmiessler.com/study/tcpdump/</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clqq60vsk0001yoqagryocwdu","tag_id":"clqq6t7l60000fwqa13t5fydn","_id":"clqq6t7la0002fwqadag034zu"},{"post_id":"clqq60vsq0008yoqa9wpa1k3r","tag_id":"clqq6t7l60000fwqa13t5fydn","_id":"clqq6t7la0003fwqabghce9l2"},{"post_id":"clqq60vso0004yoqag7wy1951","tag_id":"clqq6t7l60000fwqa13t5fydn","_id":"clqq6t7lc0005fwqah3uz0axc"},{"post_id":"clqq60vsn0003yoqa6x6m76on","tag_id":"clqq6t7l60000fwqa13t5fydn","_id":"clqq6t7lc0007fwqa88lsccz2"},{"post_id":"clqq60vsp0006yoqa4lru0frp","tag_id":"clqq6t7l60000fwqa13t5fydn","_id":"clqq6t7lc0008fwqa28w81cua"},{"post_id":"clqq60vsp0006yoqa4lru0frp","tag_id":"clqq6t7lb0004fwqaf0a63dv3","_id":"clqq6t7lc000afwqagne5faru"},{"post_id":"clqq60vso0005yoqafs37dn3u","tag_id":"clqq6t7l60000fwqa13t5fydn","_id":"clqq6t7ld000cfwqad9dg6jaw"},{"post_id":"clqq60vso0005yoqafs37dn3u","tag_id":"clqq6t7lb0004fwqaf0a63dv3","_id":"clqq6t7ld000dfwqact01ff3m"},{"post_id":"clqq60vsp0007yoqa5epd97bh","tag_id":"clqq6t7l60000fwqa13t5fydn","_id":"clqq6t7ld000ffwqacp1a240g"},{"post_id":"clqq60vsp0007yoqa5epd97bh","tag_id":"clqq6t7lb0004fwqaf0a63dv3","_id":"clqq6t7ld000gfwqa120i0g5w"},{"post_id":"clqq60vsq0009yoqac2mbczx1","tag_id":"clqq6t7l60000fwqa13t5fydn","_id":"clqq6t7ld000hfwqa8grh9wqo"},{"post_id":"clqq60vsq0009yoqac2mbczx1","tag_id":"clqq6t7lb0004fwqaf0a63dv3","_id":"clqq6t7ld000ifwqa2vpcapdy"}],"Tag":[{"name":"技术笔记","_id":"clqq6t7l60000fwqa13t5fydn"},{"name":"Linux","_id":"clqq6t7lb0004fwqaf0a63dv3"}]}}